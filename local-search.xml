<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ros文件权限</title>
    <link href="/2023/09/24/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ROS%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ros%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/"/>
    <url>/2023/09/24/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ROS%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ros%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/</url>
    
    <content type="html"><![CDATA[<h2 id="1-错误"><a href="#1-错误" class="headerlink" title="1. 错误"></a>1. 错误</h2><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/40.png"></p><h2 id="2-解决方案"><a href="#2-解决方案" class="headerlink" title="2. 解决方案"></a>2. 解决方案</h2><p>这个问题是由于该路径下ros文件权限造成的。输入以下命令修改权限：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo chmod 777 -R ~&#x2F;.ros&#x2F;</code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>错误处理</category>
      
      <category>ROS错误处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gazebo Error in REST request 错误处理</title>
    <link href="/2023/09/24/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ROS%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/gazebo%20Error%20in%20REST%20request%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"/>
    <url>/2023/09/24/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ROS%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/gazebo%20Error%20in%20REST%20request%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="1-错误"><a href="#1-错误" class="headerlink" title="1. 错误"></a>1. 错误</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Gazebo [Err] [REST.cc:20 5 ] Error in REST request</code></pre></div></figure><h2 id="2-解决方案"><a href="#2-解决方案" class="headerlink" title="2. 解决方案"></a>2. 解决方案</h2><ul><li>打开文件<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit ~&#x2F;.ignition&#x2F;fuel&#x2F;config.yaml</code></pre></div></figure></li><li>释掉内容<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">url： https:&#x2F;&#x2F;api.ignitionfuel.org</code></pre></div></figure></li><li>替换内容<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">url: https:&#x2F;&#x2F;api.ignitionrobotics.org</code></pre></div></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>错误处理</category>
      
      <category>ROS错误处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tab键补全指令.gvfs错误</title>
    <link href="/2023/09/24/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ubuntu%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/tab%E9%94%AE%E8%A1%A5%E5%85%A8%E6%8C%87%E4%BB%A4.gvfs%E9%94%99%E8%AF%AF/"/>
    <url>/2023/09/24/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ubuntu%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/tab%E9%94%AE%E8%A1%A5%E5%85%A8%E6%8C%87%E4%BB%A4.gvfs%E9%94%99%E8%AF%AF/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04</li><li>修改时间：2021年12月21日</li></ul><hr><p><strong>问题描述：</strong></p><p>tab键补全操作出现错误，显示：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Warning: error while crawling &#x2F;home&#x2F;robot:boost::filesystem::status: Permission denied:“&#x2F;home&#x2F;robot&#x2F;.gvfs”</code></pre></div></figure><p><strong>解决方案：</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo umount &#x2F;home&#x2F;root&#x2F;.gvfs      # 即是错误显示中的路径&#x2F;home&#x2F;robot&#x2F;.gvfsrm -rf &#x2F;home&#x2F;root&#x2F;.gvfs</code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>错误处理</category>
      
      <category>ubuntu错误处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu软件启动，不显示软件界面</title>
    <link href="/2023/09/24/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ubuntu%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ubuntu%E8%BD%AF%E4%BB%B6%E5%90%AF%E5%8A%A8%EF%BC%8C%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%BD%AF%E4%BB%B6%E7%95%8C%E9%9D%A2/"/>
    <url>/2023/09/24/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ubuntu%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/ubuntu%E8%BD%AF%E4%BB%B6%E5%90%AF%E5%8A%A8%EF%BC%8C%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%BD%AF%E4%BB%B6%E7%95%8C%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04</li><li>修改时间：2021年12月21日</li></ul><hr><p><strong>问题描述：</strong> 打开一个软件，窗口上部能看到软件已经打开，但是看不到软件界面。</p><p><strong>问题原因：</strong> ubuntu 会启动几个终端窗口，软件就显示在实际不存在的终端上。</p><p><strong>解决方案：</strong></p><p>① 命令 xrandr 查看当前启动的输出终端口。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xrandr </code></pre></div></figure><p>② 关掉没有使用的终端</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xrandr --output  [没有使用的终端]  --off</code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>错误处理</category>
      
      <category>ubuntu错误处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux常用软件版本查看命令</title>
    <link href="/2023/09/23/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Linux%E7%B3%BB%E7%BB%9F/Linux%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E7%89%88%E6%9C%AC%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/09/23/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/Linux%E7%B3%BB%E7%BB%9F/Linux%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E7%89%88%E6%9C%AC%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="Apt-命令列出已安装软件"><a href="#Apt-命令列出已安装软件" class="headerlink" title="Apt 命令列出已安装软件"></a>Apt 命令列出已安装软件</h2><figure><div class="code-wrapper"><pre class="line-numbers language-batch" data-language="batch"><code class="language-batch">apt list --installedapt list --installed | less&#x2F;&#x2F; 或者dpkg -l</code></pre></div></figure><h2 id="opencv版本"><a href="#opencv版本" class="headerlink" title="opencv版本"></a>opencv版本</h2><figure><div class="code-wrapper"><pre class="line-numbers language-batch" data-language="batch"><code class="language-batch">pkg-config --modversion opencv</code></pre></div></figure><p>或者python查找</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3import cv2cv2.__version__</code></pre></div></figure><h2 id="python版本"><a href="#python版本" class="headerlink" title="python版本"></a>python版本</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python2 --version   # 查看 python2 安装版本python3 --version   # 查看 python3 安装版本python --version    # 查看默认 python 版本# 修改默认版本echo alias python&#x3D;python3 &gt;&gt; ~&#x2F;.bashrcsource ~&#x2F;.bashrc</code></pre></div></figure><h1 id="eigen版本"><a href="#eigen版本" class="headerlink" title="eigen版本"></a>eigen版本</h1><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit &#x2F;usr&#x2F;include&#x2F;eigen3&#x2F;Eigen&#x2F;src&#x2F;Core&#x2F;util&#x2F;Macros.h</code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">#define EIGEN_WORLD_VERSION 3#define EIGEN_MAJOR_VERSION 3#define EIGEN_MINOR_VERSION 7</code></pre></div></figure><p>版本为3.3.7</p><h2 id="CUDA版本"><a href="#CUDA版本" class="headerlink" title="CUDA版本"></a>CUDA版本</h2><h2 id="CUDNN版本"><a href="#CUDNN版本" class="headerlink" title="CUDNN版本"></a>CUDNN版本</h2>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件使用</category>
      
      <category>Linux系统</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SLAM基础包安装 - ROS Noetic</title>
    <link href="/2023/09/23/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/SLAM%E5%9F%BA%E7%A1%80%E5%8C%85%E5%AE%89%E8%A3%85/SLAM%E5%9F%BA%E7%A1%80%E5%8C%85%E5%AE%89%E8%A3%85-ROS-Noetic/"/>
    <url>/2023/09/23/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/SLAM%E5%9F%BA%E7%A1%80%E5%8C%85%E5%AE%89%E8%A3%85/SLAM%E5%9F%BA%E7%A1%80%E5%8C%85%E5%AE%89%E8%A3%85-ROS-Noetic/</url>
    
    <content type="html"><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#%E4%B8%80--%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">一 <strong>、</strong> 注意事项</a></li><li><a href="#%E4%BA%8C--%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E5%8C%85">二 <strong>、</strong> 二进制安装软件包</a></li><li><a href="#%E4%B8%89--%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E5%8C%85">三 <strong>、</strong> 源码安装软件包</a><ul><li><a href="#1-g2o%E5%AE%89%E8%A3%85">1. g2o安装</a></li><li><a href="#2-abseil-cpp%E5%AE%89%E8%A3%85">2. abseil-cpp安装</a></li><li><a href="#3-cartographer">3. cartographer</a></li></ul></li><li><a href="#%E5%9B%9B%E4%B8%8D%E7%94%A8%E5%AE%89%E8%A3%85%E4%BB%85%E5%81%9A%E8%AE%B0%E5%BD%95">四、不用安装，仅做记录</a><ul><li><a href="#1-ipopt">1. IPOPT</a><ul><li><a href="#1x86%E6%AD%A3%E7%A1%AE%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F">1）X86正确安装方式</a></li><li><a href="#2x86%E9%94%99%E8%AF%AF%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F">2）X86错误安装方式</a></li><li><a href="#3arm%E7%89%88%E6%9C%AC%E6%AD%A3%E7%A1%AE">3）ARM版本正确</a></li></ul></li><li><a href="#2-osqp">2. osqp</a></li><li><a href="#3-control_box_rst">3. control_box_rst</a></li><li><a href="#4-protobuf%E5%AE%89%E8%A3%85">4. protobuf安装</a></li><li><a href="#5-gtsam">5. gtsam</a></li><li><a href="#6-ceres">6. ceres</a></li><li><a href="#7-realsense">7. RealSense</a></li></ul></li><li><a href="#%E4%BA%94--%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">五 <strong>、</strong> 错误提示与解决方案</a><ul><li><a href="#1-cartographer---gmock_library-">1. cartographer - GMOCK_LIBRARY </a></li><li><a href="#2-%E5%AE%98%E6%96%B9mpc----teb_local_planner%E5%8F%82%E6%95%B0%E4%B8%8D%E5%8C%B9%E9%85%8D">2. 官方MPC -  teb_local_planner参数不匹配</a></li><li><a href="#3-aloam--lego-loam--lio-sam---pcl">3. ALOAM \ Lego-LOAM &#x2F; LIO-SAM - PCL</a></li><li><a href="#4-aloam--lego-loam--lio-sam---opencvcvh">4. ALOAM &#x2F; Lego-LOAM &#x2F; LIO-SAM - opencv&#x2F;cv.h</a></li><li><a href="#5-a-loam---cv_load_image_grayscale">5. A-LOAM - CV_LOAD_IMAGE_GRAYSCALE</a></li><li><a href="#6-serialization%E6%8A%A5%E9%94%99">6. serialization报错</a></li><li><a href="#7-neither-eigen3_include_dirs-nor-eigen3_libraries-is-defined---%E8%AD%A6%E5%91%8A">7. neither ‘Eigen3_INCLUDE_DIRS’ nor ‘Eigen3_LIBRARIES’ is defined - 警告</a></li><li><a href="#8-neither-ompl_include_dirs-nor-ompl_libraries-is-defined---%E8%AD%A6%E5%91%8A">8. neither ‘ompl_INCLUDE_DIRS’ nor ‘ompl_LIBRARIES’ is defined - 警告</a></li><li><a href="#9-cmake_clang_tools---%E8%AD%A6%E5%91%8A">9. cmake_clang_tools - 警告</a></li><li><a href="#10-vtk---%E8%AD%A6%E5%91%8A">10. vtk - 警告</a></li><li><a href="#11-ompl">11. ompl</a></li></ul></li><li><a href="#%E5%85%AD%E6%9C%AA%E8%A7%A3%E5%86%B3">六、未解决</a><ul><li><a href="#1-vtk---%E8%AD%A6%E5%91%8A">1. vtk - 警告</a></li><li><a href="#2-cmp0037---%E8%AD%A6%E5%91%8A">2. CMP0037 - 警告</a></li><li><a href="#3-lio-sam-gtsam---%E8%AD%A6%E5%91%8A">3. LIO-SAM GTSAM - 警告</a></li><li><a href="#4-neither-qt5_include_dirs-nor-qt5_libraries-is-defined---%E8%AD%A6%E5%91%8A">4. neither ‘Qt5_INCLUDE_DIRS’ nor ‘Qt5_LIBRARIES’ is defined - 警告</a></li></ul></li></ul><hr><ul><li>操作系统：ubuntu 20.04</li><li>修改时间：2023年4月10日</li></ul><hr><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gmapping# NOhector# NOkarto# sparse_bundle_adjustmentALOAM# CeresLego-LOAM# GTSAMLIO-SAM# GTSAMcartographer# absl Ceres Lua python3-sphinx libgmock-devnaviation# libsdl1.2-dev libsdl-image1.2-dev ros-noetic-tf2-sensor-msgs ros-noetic-move-base-msgsnavigation_experimental# ros-noetic-sbpltuw_robot# libdxflib-devhunter# libasio-devgnss_hc220# ros-noetic-automotive-autonomy-msgsgps_umd# libgps-devteb# g2o(源码安装) libsuitesparse-devmpc_local_planner# teb_local_planner osqp control_box_rstros-noetic-control-box-rst&#96; -- 这个包安装完之后就默认安装了IPOPT，官方MPC包使用的就是这个版本的 IPOPT。  --  当使用 mpc_local_planner_mb 这个包时，需要安装 3.12.8 版本的 IPOPT 包  &#96;velodyne # libpcap-devrealsense# ros-noetic-realsense2-cameraurdf 的检查工具# liburdfdom-toolsROS_Pure_Pursuit# ros-noetic-ackermann-msgscppad# https:&#x2F;&#x2F;github.com&#x2F;Hypha-ROS&#x2F;hypharos_minicarlibompl-dev# https:&#x2F;&#x2F;github.com&#x2F;leggedrobotics&#x2F;se2_navigationcmake_clang_tools(源码安装)# https:&#x2F;&#x2F;github.com&#x2F;ANYbotics&#x2F;cmake_clang_toolsros-noetic-ompl# hybrid_astar_planner  [https:&#x2F;&#x2F;github.com&#x2F;dengpw&#x2F;hybrid_astar_planner]ros-noetic-ros-control# hunterros-noetic-ros-controllers# hunter</code></pre></div></figure><h1 id="一-、-注意事项"><a href="#一-、-注意事项" class="headerlink" title="一 、 注意事项"></a>一 <strong>、</strong> 注意事项</h1><p>安装包所在的目录，不能有空格。</p><h1 id="二-、-二进制安装软件包"><a href="#二-、-二进制安装软件包" class="headerlink" title="二 、 二进制安装软件包"></a>二 <strong>、</strong> 二进制安装软件包</h1><ul><li><strong>使用二进制包安装的依赖库</strong><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt updatesudo add-apt-repository ppa:borglab&#x2F;gtsam-release-4.0sudo apt updatesudo apt install git gcc g++ clang unzip cmake python3-wstool python3-rosdep ninja-build stow libceres-dev liblua5.2-dev python3-sphinx libgmock-dev  google-mock libboost-all-dev libcairo2-dev libcurl4-openssl-dev libeigen3-dev libgflags-dev libgoogle-glog-dev liblua5.2-dev libsuitesparse-dev lsb-release  libgtsam-dev libgtsam-unstable-dev libsdl1.2-dev libsdl-image1.2-dev libdxflib-dev libasio-dev libgps-dev cppad libompl-dev liburdfdom-tools libpcap-devsudo apt install ros-noetic-sparse-bundle-adjustment ros-noetic-tf2-sensor-msgs ros-noetic-move-base-msgs ros-noetic-sbpl ros-noetic-automotive-autonomy-msgs ros-noetic-realsense2-camera ros-noetic-ackermann-msgs ros-noetic-arbotix  ros-noetic-control-box-rst  ros-noetic-ompl ros-noetic-ros-control# vtk 警告sudo ln -s &#x2F;usr&#x2F;bin&#x2F;vtk7 &#x2F;usr&#x2F;bin&#x2F;vtk# 单独编译catkin_make -DCATKIN_WHITELIST_PACKAGES&#x3D;&quot;cloud_msgs&quot;catkin_make -DCATKIN_WHITELIST_PACKAGES&#x3D;&quot;hunter_msgs&quot;catkin_make -DCATKIN_WHITELIST_PACKAGES&#x3D;&quot;gps_common&quot;catkin_make -DCATKIN_WHITELIST_PACKAGES&#x3D;&quot;tuw_multi_robot_msgs&quot; sudo apt install   libmatio-dev libatlas-base-dev libmetis-dev  libglfw3-dev libgtk-3-dev ros-noetic-teleop-twist-keyboard  ros-noetic-ros-controllers  ros-noetic-teleop-twist-joy ros-noetic-geographic-msgs ros-noetic-jsk-rviz-plugins ros-noetic-jsk-recognition-msgs</code></pre></div></figure></li><li>说明-未安装<figure><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">ros-noetic-jsk-recognition-msgs  &#x2F;&#x2F; Voronoi Based Hybrid A*ros-noetic-jsk-rviz-plugins      &#x2F;&#x2F; Voronoi Based Hybrid A*libompl-dev   &#x2F;&#x2F; Voronoi Based Hybrid A*gfortran      &#x2F;&#x2F; Ipoptcppad &#x2F;&#x2F; IPOPTIPOPT &#x2F;&#x2F; mpc_mb</code></pre></div></figure></li></ul><h1 id="三-、-源码安装软件包"><a href="#三-、-源码安装软件包" class="headerlink" title="三 、 源码安装软件包"></a>三 <strong>、</strong> 源码安装软件包</h1><h2 id="1-g2o安装"><a href="#1-g2o安装" class="headerlink" title="1. g2o安装"></a>1. g2o安装</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mkdir buildcd buildcmake ..make sudo make install</code></pre></div></figure><h2 id="2-abseil-cpp安装"><a href="#2-abseil-cpp安装" class="headerlink" title="2. abseil-cpp安装"></a>2. abseil-cpp安装</h2><p>使用cartographer包中的安装文件安装。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cartographer&#x2F;scripts&#x2F;install_abseil.sh</code></pre></div></figure><h2 id="3-cartographer"><a href="#3-cartographer" class="headerlink" title="3. cartographer"></a>3. cartographer</h2><p>cartographer的成功安装，主要分为几步：</p><ol><li>安装基础依赖。</li><li>安装abseil-cpp。<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 安装 abslcartographer&#x2F;scripts&#x2F;install_abseil.sh</code></pre></div></figure></li><li>安装ceres solver。</li><li>确认是否已经安装protobuf。</li><li>通过cmake安装cartographer。<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 安装 cartographermkdir buildcd buildcmake ..makesudo make install</code></pre></div></figure></li></ol><p><strong>参考资料</strong></p><p><a href="https://google-cartographer.readthedocs.io/en/latest/">https://google-cartographer.readthedocs.io/en/latest/</a></p><p><a href="https://google-cartographer-ros.readthedocs.io/en/latest/compilation.html#building-installation">https://google-cartographer-ros.readthedocs.io/en/latest/compilation.html#building-installation</a></p><h1 id="四、不用安装，仅做记录"><a href="#四、不用安装，仅做记录" class="headerlink" title="四、不用安装，仅做记录"></a>四、不用安装，仅做记录</h1><h2 id="1-IPOPT"><a href="#1-IPOPT" class="headerlink" title="1. IPOPT"></a>1. IPOPT</h2><p>通过ros安装control_box_rst安装时默认已经安装，如果再次安装ipopt，mpc官方包会报错！</p><p>当使用<code>mpc_local_planner_mb</code>这个包时，需要安装3.12.8版本的IPOPT包。</p><h3 id="1）X86正确安装方式"><a href="#1）X86正确安装方式" class="headerlink" title="1）X86正确安装方式"></a>1）X86正确安装方式</h3><p>参考链接，但不按照链接执行，有文件下载困难，已经提前下载</p><p><a href="https://blog.csdn.net/qq_35632833/article/details/116233665">https://blog.csdn.net/qq_35632833/article/details/116233665</a></p><p><a href="https://coin-or.github.io/Ipopt/INSTALL.html">https://coin-or.github.io/Ipopt/INSTALL.html</a></p><p><a href="https://github.com/rst-tu-dortmund/control_box_rst/wiki/ipopt">https://github.com/rst-tu-dortmund/control_box_rst/wiki/ipopt</a></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 最终执行步骤sudo apt-get install gcc g++ gfortran cmake liblapack-dev pkg-config unzip gitsudo apt-get install cppadcd Ipopt-3.12.8mkdir buildcd build..&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;localmake sudo make install</code></pre></div></figure><h3 id="2）X86错误安装方式"><a href="#2）X86错误安装方式" class="headerlink" title="2）X86错误安装方式"></a>2）X86错误安装方式</h3><p><a href="https://blog.csdn.net/weixin_34945803/article/details/118582379">https://blog.csdn.net/weixin_34945803/article/details/118582379</a></p><figure><div class="code-wrapper"><pre class="line-numbers language-batch" data-language="batch"><code class="language-batch">sudo apt-get install coinor-libipopt-dev cppad</code></pre></div></figure><p>错误提示：</p><figure><div class="code-wrapper"><pre class="line-numbers language-abap" data-language="abap"><code class="language-abap">&#x2F;usr&#x2F;include&#x2F;coin&#x2F;IpSmartPtr.hpp:18:4: error: #error &quot;don&#39;t have header file for stddef&quot;# error &quot;don&#39;t have header file for stddef&quot;</code></pre></div></figure><h3 id="3）ARM版本正确"><a href="#3）ARM版本正确" class="headerlink" title="3）ARM版本正确"></a>3）ARM版本正确</h3><p><a href="https://blog.csdn.net/weixin_48199550/article/details/123687236">https://blog.csdn.net/weixin_48199550/article/details/123687236</a></p><h2 id="2-osqp"><a href="#2-osqp" class="headerlink" title="2. osqp"></a>2. osqp</h2><p>mpc_local_planner，暂未在ubuntu 20安装。</p><p><a href="https://osqp.org/docs/get_started/sources.html#build-the-binaries">https://osqp.org/docs/get_started/sources.html#build-the-binaries</a></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cd osqpmkdir buildcd buildcmake -G &quot;Unix Makefiles&quot; ..cmake --build .sudo cmake --build . --target install</code></pre></div></figure><h2 id="3-control-box-rst"><a href="#3-control-box-rst" class="headerlink" title="3. control_box_rst"></a>3. control_box_rst</h2><ul><li><p>二进制安装</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt install ros-melodic-control-box-rst</code></pre></div></figure><p>通过这种方式安装后，默认安装了ipopt，官方MPC包需要使用该版本的ipopt。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/21.png"></p><p><a href="https://github.com/rst-tu-dortmund/control_box_rst/wiki/Build-from-Source">https://github.com/rst-tu-dortmund/control_box_rst/wiki/Build-from-Source</a></p><p><a href="https://github.com/rst-tu-dortmund/control_box_rst/wiki/Build-ROS-Package">https://github.com/rst-tu-dortmund/control_box_rst/wiki/Build-ROS-Package</a></p></li></ul><h2 id="4-protobuf安装"><a href="#4-protobuf安装" class="headerlink" title="4. protobuf安装"></a>4. protobuf安装</h2><p>ubuntu18.04 &#x2F; ubuntu 20安装完成后已经安装了该依赖库，无需再次安装，如果再安装一次，路径错误，会出现protobuf链接失败的报错。cartographer依赖的protoc版本是3.0以上。</p><p>在安装之前运行指令：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">protoc -–version   # 查看ubuntu已经安装的protoc版本，安装ubuntu后显示已经安装3.0.0版本# libprotoc 3.0.0which protoc      # 查看protoc安装位置，安装ubuntu后protoc的安装位置为&#x2F;usr&#x2F;bin&#x2F;protoc# &#x2F;usr&#x2F;bin&#x2F;protoc</code></pre></div></figure><p>如果重复安装了，则会显示protoc的安装位置为：&#x2F;usr&#x2F;local&#x2F;bin&#x2F;protoc，在此位置基础上安装cartographer会报错。</p><p>因此安装cartographer时本步骤不需要执行。</p><h2 id="5-gtsam"><a href="#5-gtsam" class="headerlink" title="5. gtsam"></a>5. gtsam</h2><p>修改为二进制安装。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># Add PPAsudo add-apt-repository ppa:borglab&#x2F;gtsam-release-4.0sudo apt update  # not necessary since Bionic# Install:sudo apt install libgtsam-dev libgtsam-unstable-dev</code></pre></div></figure><p><a href="https://gtsam.org/get_started/">https://gtsam.org/get_started/</a></p><p><a href="https://github.com/borglab/gtsam">https://github.com/borglab/gtsam</a></p><h2 id="6-ceres"><a href="#6-ceres" class="headerlink" title="6. ceres"></a>6. ceres</h2><ul><li><p>二进制方式</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt install libceres-dev</code></pre></div></figure></li><li><p>源码安装</p><p>cartographer对应版本：1.13.0</p><p><a href="http://ceres-solver.org/installation.html">http://ceres-solver.org/installation.html</a></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get install cmake libgoogle-glog-dev libgflags-dev libatlas-base-dev libeigen3-dev libsuitesparse-devcd ~&#x2F;Downloadsgit clone https:&#x2F;&#x2F;github.com&#x2F;ceres-solver&#x2F;ceres-solver.gitcd ceres-solvergit checkout 1.13.0mkdir buildcd buildcmake ..make -j2sudo make install</code></pre></div></figure></li></ul><h2 id="7-RealSense"><a href="#7-RealSense" class="headerlink" title="7. RealSense"></a>7. RealSense</h2><ul><li><p>ROS驱动版本，二进制安装</p><figure><div class="code-wrapper"><pre class="line-numbers language-batch" data-language="batch"><code class="language-batch">sudo apt-get install ros-$ROS_DISTRO-realsense2-camera</code></pre></div></figure><p><a href="https://github.com/IntelRealSense/realsense-ros">https://github.com/IntelRealSense/realsense-ros</a></p><p><a href="https://blog.csdn.net/chengchang1234/article/details/117603781">https://blog.csdn.net/chengchang1234/article/details/117603781</a></p><p><a href="https://dev.intelrealsense.com/docs/compiling-librealsense-for-linux-ubuntu-guide">https://dev.intelrealsense.com/docs/compiling-librealsense-for-linux-ubuntu-guide</a></p></li></ul><h1 id="五-、-错误提示与解决方案"><a href="#五-、-错误提示与解决方案" class="headerlink" title="五 、 错误提示与解决方案"></a>五 <strong>、</strong> 错误提示与解决方案</h1><h2 id="1-cartographer-GMOCK-LIBRARY-x20"><a href="#1-cartographer-GMOCK-LIBRARY-x20" class="headerlink" title="1. cartographer - GMOCK_LIBRARY&#x20;"></a>1. cartographer - GMOCK_LIBRARY&#x20;</h2><p><strong>问题：</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Make Error: The following variables are used in this project, but they are set to NOTFOUND.Please set them or make sure they are set and tested correctly in the CMake files:GMOCK_LIBRARY (ADVANCED)    linked by target &quot;time_conversion_test&quot; in directory &#x2F;home&#x2F;slam&#x2F;Documents&#x2F;SLAM&#x2F;ROS-NOETIC&#x2F;src&#x2F;ros-perception&#x2F;cartographer&#x2F;cartographer_ros&#x2F;cartographer_ros    linked by target &quot;time_conversion_test&quot; in directory &#x2F;home&#x2F;slam&#x2F;Documents&#x2F;SLAM&#x2F;ROS-NOETIC&#x2F;src&#x2F;ros-perception&#x2F;cartographer&#x2F;cartographer_ros&#x2F;cartographer_ros    linked by target &quot;msg_conversion_test&quot; in directory &#x2F;home&#x2F;slam&#x2F;Documents&#x2F;SLAM&#x2F;ROS-NOETIC&#x2F;src&#x2F;ros-perception&#x2F;cartographer&#x2F;cartographer_ros&#x2F;cartographer_ros    linked by target &quot;msg_conversion_test&quot; in directory &#x2F;home&#x2F;slam&#x2F;Documents&#x2F;SLAM&#x2F;ROS-NOETIC&#x2F;src&#x2F;ros-perception&#x2F;cartographer&#x2F;cartographer_ros&#x2F;cartographer_ros    linked by target &quot;metrics_test&quot; in directory &#x2F;home&#x2F;slam&#x2F;Documents&#x2F;SLAM&#x2F;ROS-NOETIC&#x2F;src&#x2F;ros-perception&#x2F;cartographer&#x2F;cartographer_ros&#x2F;cartographer_ros    linked by target &quot;metrics_test&quot; in directory &#x2F;home&#x2F;slam&#x2F;Documents&#x2F;SLAM&#x2F;ROS-NOETIC&#x2F;src&#x2F;ros-perception&#x2F;cartographer&#x2F;cartographer_ros&#x2F;cartographer_ros    linked by target &quot;configuration_files_test&quot; in directory &#x2F;home&#x2F;slam&#x2F;Documents&#x2F;SLAM&#x2F;ROS-NOETIC&#x2F;src&#x2F;ros-perception&#x2F;cartographer&#x2F;cartographer_ros&#x2F;cartographer_ros    linked by target &quot;configuration_files_test&quot; in directory &#x2F;home&#x2F;slam&#x2F;Documents&#x2F;SLAM&#x2F;ROS-NOETIC&#x2F;src&#x2F;ros-perception&#x2F;cartographer&#x2F;cartographer_ros&#x2F;cartographer_ros</code></pre></div></figure><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/22.png"></p><p><strong>原因及解决方案：</strong></p><p>没有找到GMOCK_LIBRARY包，使用 <code>sudo apt install libgmock-dev</code>安装。</p><h2 id="2-官方MPC-teb-local-planner参数不匹配"><a href="#2-官方MPC-teb-local-planner参数不匹配" class="headerlink" title="2. 官方MPC -  teb_local_planner参数不匹配"></a>2. 官方MPC -  teb_local_planner参数不匹配</h2><p><strong>问题：</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">&#x2F;usr&#x2F;include&#x2F;boost&#x2F;smart_ptr&#x2F;make_shared_object.hpp:256:5: error: no matching function for call to ‘teb_local_planner::LineRobotFootprint::LineRobotFootprint(Eigen::Map&lt;const Eigen::Matrix&lt;double, 2, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;const Eigen::Matrix&lt;double, 2, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;)’  256 |     ::new( pv ) T( boost::detail::sp_forward&lt;Args&gt;( args )... );</code></pre></div></figure><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/23.png"></p><p><strong>原因及解决方案：</strong></p><p>MPC中调用了teb的接口，但函数形参数目没有匹配，TEB中需要三个参数，MPC只提供了两个参数。在MPC的调用接口中添加第三个参数，最小障碍物距离。通过二进制安装的teb不存在这个问题。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/24.png"></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/25.png"></p><h2 id="3-ALOAM-Lego-LOAM-LIO-SAM-PCL"><a href="#3-ALOAM-Lego-LOAM-LIO-SAM-PCL" class="headerlink" title="3. ALOAM \ Lego-LOAM &#x2F; LIO-SAM - PCL"></a>3. ALOAM \ Lego-LOAM &#x2F; LIO-SAM - PCL</h2><p><a href="https://blog.csdn.net/abanchao/article/details/127061811?spm=wolai.workspace.0.0.1c4ac81dM2EyiX">https://blog.csdn.net/abanchao/article/details/127061811?spm=wolai.workspace.0.0.1c4ac81dM2EyiX</a></p><p><a href="https://blog.csdn.net/hhz_999/article/details/126767250?spm=wolai.workspace.0.0.1c4ac81dM2EyiX">https://blog.csdn.net/hhz_999/article/details/126767250?spm=wolai.workspace.0.0.1c4ac81dM2EyiX</a></p><p><a href="https://blog.csdn.net/wsl_longwudi/article/details/126885601?spm=wolai.workspace.0.0.1c4ac81dM2EyiX">https://blog.csdn.net/wsl_longwudi/article/details/126885601?spm=wolai.workspace.0.0.1c4ac81dM2EyiX</a></p><p><a href="https://github.com/TixiaoShan/LIO-SAM/issues/206?spm=wolai.workspace.0.0.42771549I5wIPD">https://github.com/TixiaoShan/LIO-SAM/issues/206?spm=wolai.workspace.0.0.42771549I5wIPD</a></p><p><strong>问题：</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">&#x2F;usr&#x2F;include&#x2F;pcl-1.10&#x2F;pcl&#x2F;pcl_config.h:7:4: error: #error PCL requires C++14 or above</code></pre></div></figure><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/26.png"></p><p><strong>原因及解决方案：</strong></p><p>PCL 1.10 要求使用 c++14 及以上版本。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 将 CMakeLists.txt 中的编译选项 std&#x3D;c++11# 改为 std&#x3D;c++14</code></pre></div></figure><h2 id="4-ALOAM-Lego-LOAM-LIO-SAM-opencv-cv-h"><a href="#4-ALOAM-Lego-LOAM-LIO-SAM-opencv-cv-h" class="headerlink" title="4. ALOAM &#x2F; Lego-LOAM &#x2F; LIO-SAM - opencv&#x2F;cv.h"></a>4. ALOAM &#x2F; Lego-LOAM &#x2F; LIO-SAM - opencv&#x2F;cv.h</h2><p><strong>问题：</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">A-LOAM&#x2F;src&#x2F;scanRegistration.cpp:44:10: fatal error: opencv&#x2F;cv.h: No such file or directoryLIO-SAM&#x2F;include&#x2F;utility.h:18:10: fatal error: opencv&#x2F;cv.h: No such file or directoryLeGO-LOAM&#x2F;include&#x2F;utility.h:13:10: fatal error: opencv&#x2F;cv.h: No such file or directory</code></pre></div></figure><p><strong>原因及解决方案：</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;opencv&#x2F;cv.h&gt;&#x2F;&#x2F; 替换为#include &lt;opencv2&#x2F;opencv.hpp&gt;</code></pre></div></figure><h2 id="5-A-LOAM-CV-LOAD-IMAGE-GRAYSCALE"><a href="#5-A-LOAM-CV-LOAD-IMAGE-GRAYSCALE" class="headerlink" title="5. A-LOAM - CV_LOAD_IMAGE_GRAYSCALE"></a>5. A-LOAM - CV_LOAD_IMAGE_GRAYSCALE</h2><figure><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">A-LOAM&#x2F;src&#x2F;kittiHelper.cpp:91:64: error: ‘CV_LOAD_IMAGE_GRAYSCALE’ was not declared in this scope</code></pre></div></figure><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/27.png"></p><figure><div class="code-wrapper"><pre class="line-numbers language-batch" data-language="batch"><code class="language-batch">CV_LOAD_IMAGE_GRAYSCALE# 修改为cv::IMREAD_GRAYSCALE</code></pre></div></figure><h2 id="6-serialization报错"><a href="#6-serialization报错" class="headerlink" title="6. serialization报错"></a>6. serialization报错</h2><figure><div class="code-wrapper"><pre class="line-numbers language-batch" data-language="batch"><code class="language-batch">&#x2F;usr&#x2F;include&#x2F;flann&#x2F;util&#x2F;serialization.h:34:14: error: ‘class std::unordered_map&lt;unsigned int, std::vector&lt;unsigned int&gt; &gt;’ has no member named ‘serialize’</code></pre></div></figure><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/28.png"></p><p>在<code>std≥C++ 11</code>的情况下，似乎<code>opencv</code>头文件泄漏 <code>#define USE_UNORDERED_MAP 1</code>。然后由原始flann库中的<code>lsh_table.h</code>中的#if获取。<br>解决方案是在<code>OpenCV</code>之前包含<code>flann</code>。在<code>utility.h</code>中将 <code>#include &lt;opencv2/opencv.hpp&gt;</code> 头文件放在<code>pcl</code>库头文件之后。</p><h2 id="7-neither-‘Eigen3-INCLUDE-DIRS’-nor-‘Eigen3-LIBRARIES’-is-defined-警告"><a href="#7-neither-‘Eigen3-INCLUDE-DIRS’-nor-‘Eigen3-LIBRARIES’-is-defined-警告" class="headerlink" title="7. neither ‘Eigen3_INCLUDE_DIRS’ nor ‘Eigen3_LIBRARIES’ is defined - 警告"></a>7. neither ‘Eigen3_INCLUDE_DIRS’ nor ‘Eigen3_LIBRARIES’ is defined - 警告</h2><p><strong>问题：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/29.png"></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CMake Warning at &#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;share&#x2F;catkin&#x2F;cmake&#x2F;catkin_package.cmake:166 (message):  catkin_package() DEPENDS on &#39;Eigen3&#39; but neither &#39;Eigen3_INCLUDE_DIRS&#39; nor  &#39;Eigen3_LIBRARIES&#39; is defined.Call Stack (most recent call first):  &#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;share&#x2F;catkin&#x2F;cmake&#x2F;catkin_package.cmake:102 (_catkin_package)  se2_navigation&#x2F;se2_planning&#x2F;CMakeLists.txt:38 (catkin_package)</code></pre></div></figure><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/30.png"></p><p><strong>解决方案：</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">This warning is caused by se2_planning &#39;s CMakeLists.txt Line 38:DEPENDS Eigen3# which should be:DEPENDS EIGEN3</code></pre></div></figure><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/31.png"></p><h2 id="8-neither-‘ompl-INCLUDE-DIRS’-nor-‘ompl-LIBRARIES’-is-defined-警告"><a href="#8-neither-‘ompl-INCLUDE-DIRS’-nor-‘ompl-LIBRARIES’-is-defined-警告" class="headerlink" title="8. neither ‘ompl_INCLUDE_DIRS’ nor ‘ompl_LIBRARIES’ is defined - 警告"></a>8. neither ‘ompl_INCLUDE_DIRS’ nor ‘ompl_LIBRARIES’ is defined - 警告</h2><p><strong>问题：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/32.png"></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CMake Warning at &#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;share&#x2F;catkin&#x2F;cmake&#x2F;catkin_package.cmake:166 (message):  catkin_package() DEPENDS on &#39;ompl&#39; but neither &#39;ompl_INCLUDE_DIRS&#39; nor  &#39;ompl_LIBRARIES&#39; is defined.Call Stack (most recent call first):  &#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;share&#x2F;catkin&#x2F;cmake&#x2F;catkin_package.cmake:102 (_catkin_package)  se2_navigation&#x2F;se2_planning&#x2F;CMakeLists.txt:38 (catkin_package)</code></pre></div></figure><p><strong>解决方案：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/33.png"></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">This warning is caused by se2_planning &#39;s CMakeLists.txt Line 38:DEPENDS ompl# which should be:DEPENDS OMPL</code></pre></div></figure><h2 id="9-cmake-clang-tools-警告"><a href="#9-cmake-clang-tools-警告" class="headerlink" title="9. cmake_clang_tools - 警告"></a>9. cmake_clang_tools - 警告</h2><p><strong>问题：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/34.png"></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CMake Warning at se2_navigation&#x2F;se2_planning&#x2F;CMakeLists.txt:115 (find_package):  By not providing &quot;Findcmake_clang_tools.cmake&quot; in CMAKE_MODULE_PATH this  project has asked CMake to find a package configuration file provided by  &quot;cmake_clang_tools&quot;, but CMake did not find one.  Could not find a package configuration file provided by &quot;cmake_clang_tools&quot;  with any of the following names:    cmake_clang_toolsConfig.cmake    cmake_clang_tools-config.cmake  Add the installation prefix of &quot;cmake_clang_tools&quot; to CMAKE_PREFIX_PATH or  set &quot;cmake_clang_tools_DIR&quot; to a directory containing one of the above  files.  If &quot;cmake_clang_tools&quot; provides a separate development package or  SDK, be sure it has been installed.</code></pre></div></figure><p><strong>解决方案：</strong></p><p><a href="https://github.com/ANYbotics/cmake_clang_tools">https://github.com/ANYbotics/cmake_clang_tools</a></p><h2 id="10-vtk-警告"><a href="#10-vtk-警告" class="headerlink" title="10. vtk - 警告"></a>10. vtk - 警告</h2><p><strong>问题：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/35.png"></p><p><strong>解决方案：</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo ln -s &#x2F;usr&#x2F;bin&#x2F;vtk7 &#x2F;usr&#x2F;bin&#x2F;vtk</code></pre></div></figure><h2 id="11-ompl"><a href="#11-ompl" class="headerlink" title="11. ompl"></a>11. ompl</h2><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/36.png"></p><p>安装<code>libompl-dev</code>后，编译<code>hybrid_astar_planner</code>还是会报错，需要安装<code>ros-noetic-ompl</code>。</p><h1 id="六、未解决"><a href="#六、未解决" class="headerlink" title="六、未解决"></a>六、未解决</h1><h2 id="1-vtk-警告"><a href="#1-vtk-警告" class="headerlink" title="1. vtk - 警告"></a>1. vtk - 警告</h2><p>pvtk</p><p>VTKTargets</p><p>vtkRenderingPythonTkWidgets</p><p>vtkParseOGLExt</p><h2 id="2-CMP0037-警告"><a href="#2-CMP0037-警告" class="headerlink" title="2. CMP0037 - 警告"></a>2. CMP0037 - 警告</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CMake Warning (dev) at ros-device-drivers&#x2F;gps_umd&#x2F;gps_common&#x2F;CMakeLists.txt:57 (add_executable):  Policy CMP0037 is not set: Target names should not be reserved and should  match a validity pattern.  Run &quot;cmake --help-policy CMP0037&quot; for policy  details.  Use the cmake_policy command to set the policy and suppress this  warning.</code></pre></div></figure><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/37.png"></p><h2 id="3-LIO-SAM-GTSAM-警告"><a href="#3-LIO-SAM-GTSAM-警告" class="headerlink" title="3. LIO-SAM GTSAM - 警告"></a>3. LIO-SAM GTSAM - 警告</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CMake Warning at &#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;share&#x2F;catkin&#x2F;cmake&#x2F;catkin_package.cmake:166 (message):  catkin_package() DEPENDS on &#39;GTSAM&#39; but neither &#39;GTSAM_INCLUDE_DIRS&#39; nor  &#39;GTSAM_LIBRARIES&#39; is defined.Call Stack (most recent call first):  &#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;share&#x2F;catkin&#x2F;cmake&#x2F;catkin_package.cmake:102 (_catkin_package)  ros-perception&#x2F;LIO-SAM&#x2F;CMakeLists.txt:51 (catkin_package)</code></pre></div></figure><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/38.png"></p><h2 id="4-neither-‘Qt5-INCLUDE-DIRS’-nor-‘Qt5-LIBRARIES’-is-defined-警告"><a href="#4-neither-‘Qt5-INCLUDE-DIRS’-nor-‘Qt5-LIBRARIES’-is-defined-警告" class="headerlink" title="4. neither ‘Qt5_INCLUDE_DIRS’ nor ‘Qt5_LIBRARIES’ is defined - 警告"></a>4. neither ‘Qt5_INCLUDE_DIRS’ nor ‘Qt5_LIBRARIES’ is defined - 警告</h2><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/39.png"></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CMake Warning at &#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;share&#x2F;catkin&#x2F;cmake&#x2F;catkin_package.cmake:166 (message):  catkin_package() DEPENDS on &#39;Qt5&#39; but neither &#39;Qt5_INCLUDE_DIRS&#39; nor  &#39;Qt5_LIBRARIES&#39; is defined.Call Stack (most recent call first):  &#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;share&#x2F;catkin&#x2F;cmake&#x2F;catkin_package.cmake:102 (_catkin_package)  se2_navigation&#x2F;se2_planning_rviz&#x2F;CMakeLists.txt:67 (catkin_package)</code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>SLAM基础包安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SLAM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 20.04 / 18.04安装 ROS</title>
    <link href="/2023/09/23/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ROS%E5%AE%89%E8%A3%85/ubuntu%2020.04%2018.04%E5%AE%89%E8%A3%85%20ROS/"/>
    <url>/2023/09/23/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ROS%E5%AE%89%E8%A3%85/ubuntu%2020.04%2018.04%E5%AE%89%E8%A3%85%20ROS/</url>
    
    <content type="html"><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#%E4%B8%80%E8%BD%AF%E4%BB%B6%E6%BA%90%E9%85%8D%E7%BD%AE"><strong>一、软件源配置</strong></a><ul><li><a href="#1-%E9%85%8D%E7%BD%AEros%E8%BD%AF%E4%BB%B6%E6%BA%90"><strong>1. 配置ROS软件源</strong></a></li><li><a href="#2-%E9%85%8D%E7%BD%AE%E5%AF%86%E9%92%A5"><strong>2. 配置密钥</strong></a></li></ul></li><li><a href="#%E4%BA%8C%E5%AE%89%E8%A3%85-ros"><strong>二、安装 ROS</strong></a><ul><li><a href="#1-%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%88%97%E8%A1%A8"><strong>1. 更新系统软件包列表</strong></a></li><li><a href="#2-%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%E5%AE%8C%E6%95%B4%E7%89%88-ros"><strong>2. 安装桌面完整版 ROS</strong></a></li><li><a href="#3-rosinstall-%E5%AE%89%E8%A3%85"><strong>3. rosinstall 安装</strong></a></li><li><a href="#4-%E5%88%9D%E5%A7%8B%E5%8C%96-rosdep"><strong>4. 初始化 rosdep</strong></a></li><li><a href="#5-%E9%85%8D%E7%BD%AEros%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"><strong>5. 配置ROS环境变量</strong></a></li></ul></li><li><a href="#%E4%B8%89%E6%B5%8B%E8%AF%95-ros"><strong>三、测试 ROS</strong></a></li><li><a href="#%E5%9B%9B%E5%8D%B8%E8%BD%BD-ros"><strong>四、卸载 ROS</strong></a></li><li><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE">参考文献</a></li></ul><hr><ul><li>操作系统：ubuntu18.04 &#x2F; 20.04</li><li>修改时间：2023年3月16日</li></ul><hr><blockquote><p>未特别注明安装版本的步骤，表示该步骤对于不同ubuntu版本没有区别。</p></blockquote><h1 id="一、软件源配置"><a href="#一、软件源配置" class="headerlink" title="一、软件源配置"></a><strong>一、软件源配置</strong></h1><h2 id="1-配置ROS软件源"><a href="#1-配置ROS软件源" class="headerlink" title="1. 配置ROS软件源"></a><strong>1. 配置ROS软件源</strong></h2><p>（本文使用清华源）</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo sh -c &#39;. &#x2F;etc&#x2F;lsb-release &amp;&amp; echo &quot;deb http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ros&#x2F;ubuntu&#x2F; &#96;lsb_release -cs&#96; main&quot; &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;ros-latest.list&#39;</code></pre></div></figure><h2 id="2-配置密钥"><a href="#2-配置密钥" class="headerlink" title="2. 配置密钥"></a><strong>2. 配置密钥</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-key adv --keyserver &#39;hkp:&#x2F;&#x2F;keyserver.ubuntu.com:80&#39; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</code></pre></div></figure><h1 id="二、安装-ROS"><a href="#二、安装-ROS" class="headerlink" title="二、安装 ROS"></a><strong>二、安装 ROS</strong></h1><h2 id="1-更新系统软件包列表"><a href="#1-更新系统软件包列表" class="headerlink" title="1. 更新系统软件包列表"></a><strong>1. 更新系统软件包列表</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt update</code></pre></div></figure><h2 id="2-安装桌面完整版-ROS"><a href="#2-安装桌面完整版-ROS" class="headerlink" title="2. 安装桌面完整版 ROS"></a><strong>2. 安装桌面完整版 ROS</strong></h2><ul><li><strong>ROS Noetic</strong> - ubuntu 20.04<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt install ros-noetic-desktop-full</code></pre></div></figure></li><li><strong>ROS Melodic</strong> - ubuntu 18.04<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get install ros-melodic-desktop-full</code></pre></div></figure></li></ul><h2 id="3-rosinstall-安装"><a href="#3-rosinstall-安装" class="headerlink" title="3. rosinstall 安装"></a><strong>3. rosinstall 安装</strong></h2><ul><li><strong>ROS Noetic</strong> - ubuntu 20.04<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt install python3-rosdep python3-rosinstall-generator python3-wstool</code></pre></div></figure></li><li>ROS Melodic - ubuntu 18.04<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential</code></pre></div></figure></li></ul><h2 id="4-初始化-rosdep"><a href="#4-初始化-rosdep" class="headerlink" title="4. 初始化 rosdep"></a><strong>4. 初始化 rosdep</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo rosdep initrosdep update</code></pre></div></figure><blockquote><p>该步骤因网络问题出错较多，两种解决方案：<a href="https://xrobotspace.github.io/2023/09/20/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/ubuntu%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/">1-ubuntu命令行添加代理（推荐）</a>，<a href="https://xrobotspace.github.io/2023/09/23/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ROS%E5%AE%89%E8%A3%85/sudo-rosdep-init%EF%BC%8Crosdep-update%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">2-解决方案</a>。</p></blockquote><h2 id="5-配置ROS环境变量"><a href="#5-配置ROS环境变量" class="headerlink" title="5. 配置ROS环境变量"></a><strong>5. 配置ROS环境变量</strong></h2><ul><li><strong>ROS Noetic</strong> - ubuntu 20.04<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">echo &quot;source &#x2F;opt&#x2F;ros&#x2F;noetic&#x2F;setup.bash&quot; &gt;&gt; ~&#x2F;.bashrc# 如果使用turtlebotexport TURTLEBOT3_MODEL&#x3D;burgersource ~&#x2F;.bashrc</code></pre></div></figure></li><li>ROS Melodic - ubuntu 18.04<figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">echo &quot;source &#x2F;opt&#x2F;ros&#x2F;melodic&#x2F;setup.bash&quot; &gt;&gt; ~&#x2F;.bashrc# 如果使用turtlebotexport TURTLEBOT3_MODEL&#x3D;burgersource ~&#x2F;.bashrc</code></pre></div></figure></li></ul><h1 id="三、测试-ROS"><a href="#三、测试-ROS" class="headerlink" title="三、测试 ROS"></a><strong>三、测试 ROS</strong></h1><p><strong>依次打开三个终端，运行指令：</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">roscorerosrun turtlesim turtlesim_noderosrun turtlesim turtle_teleop_key</code></pre></div></figure><h1 id="四、卸载-ROS"><a href="#四、卸载-ROS" class="headerlink" title="四、卸载 ROS"></a><strong>四、卸载 ROS</strong></h1><p>第一步：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get purge ros-*sudo rm -rf &#x2F;etc&#x2F;ros</code></pre></div></figure><p>第二步：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit ~&#x2F;.bashrc    # 删除其中关于ros的环境变量source ~&#x2F;.bashrc</code></pre></div></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="http://wiki.ros.org/cn/ROS/Installation">http://wiki.ros.org/cn/ROS/Installation</a></p>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ROS安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sudo rosdep init，rosdep update失败解决方案</title>
    <link href="/2023/09/23/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ROS%E5%AE%89%E8%A3%85/sudo-rosdep-init%EF%BC%8Crosdep-update%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2023/09/23/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ROS%E5%AE%89%E8%A3%85/sudo-rosdep-init%EF%BC%8Crosdep-update%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu18.04</li><li>修改时间：2021年12月21日</li><li>说明：<ul><li>ubuntu20.04基本步骤类似，存在一些文件的路径有区别。</li><li>本方案仅供记录，这个问题通过<a href="https://xrobotspace.github.io/2023/09/20/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/ubuntu%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/">ubuntu命令行添加代理</a>方式能更好解决。</li></ul></li></ul><hr><h1 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a><strong>一、问题描述</strong></h1><p>在Ubuntu 18.04 LTS 64bit 安装 ROS Melodic中，步骤初始化rosdep时需要执行指令：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo rosdep initrosdep update</code></pre></div></figure><p>但在执行时会因为网络问题出现错误提示。</p><h2 id="1-错误-1"><a href="#1-错误-1" class="headerlink" title="1 错误-1"></a><strong>1 错误-1</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo: rosdep：找不到命令</code></pre></div></figure><p><strong>解决办法</strong>：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt install python-rosdep</code></pre></div></figure><h2 id="2-错误-2"><a href="#2-错误-2" class="headerlink" title="2 错误-2"></a><strong>2 错误-2</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ERROR: default sources list file already exists: &#x2F;etc&#x2F;ros&#x2F;rosdep&#x2F;sources.list.d&#x2F;20-default.list Please delete if you wish to re-initialize</code></pre></div></figure><p><strong>解决办法</strong>：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo rm &#x2F;etc&#x2F;ros&#x2F;rosdep&#x2F;sources.list.d&#x2F;20-default.list</code></pre></div></figure><p>路径需根据具体位置修改正确。</p><h2 id="3-错误-3"><a href="#3-错误-3" class="headerlink" title="3 错误-3"></a>3 错误-3</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ERROR: cannot download default sources list from: https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;sources.list.d&#x2F;20-default.list Website may be down.</code></pre></div></figure><h2 id="4-错误-4"><a href="#4-错误-4" class="headerlink" title="4 错误-4"></a>4 错误-4</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">reading in sources list data from &#x2F;etc&#x2F;ros&#x2F;rosdep&#x2F;sources.list.dERROR: unable to process source [https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;osx-homebrew.yaml]:&lt;urlopen error timed out&gt; (https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;osx-homebrew.yaml)ERROR: unable to process source [https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;base.yaml]:&lt;urlopen error timed out&gt; (https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;base.yaml)ERROR: unable to process source[https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;python.yaml]:&lt;urlopen error timed out&gt; (https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;python.yaml)ERROR: unable to process source [https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;ruby.yaml]:&lt;urlopen error timed out&gt; (https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;ruby.yaml)ERROR: unable to process source [https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;releases&#x2F;fuerte.yaml]:Failed to download target platform data for gbpdistro:&lt;urlopen error timed out&gt;Query rosdistro index https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;index-v4.yaml ERROR: error loading sources list:&lt;urlopen error &lt;urlopen error timed out&gt; (https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;index-v4.yaml)&gt;</code></pre></div></figure><h1 id="二、解决方案"><a href="#二、解决方案" class="headerlink" title="二、解决方案"></a>二、解决方案</h1><h3 id="0-将rosdistro-clone到本地"><a href="#0-将rosdistro-clone到本地" class="headerlink" title="0. 将rosdistro clone到本地"></a>0. 将rosdistro clone到本地</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">git clone https:&#x2F;&#x2F;github.com&#x2F;ros&#x2F;rosdistro.git</code></pre></div></figure><p>默认会在<code>home/yourname/</code>下出现一个rosdistro文件夹，我习惯将文件夹复制到&#x2F;opt目录下，根据实际情况修改。</p><h3 id="1-修改第一个文件"><a href="#1-修改第一个文件" class="headerlink" title="1. 修改第一个文件"></a>1. 修改第一个文件</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit &#x2F;opt&#x2F;rosdistro&#x2F;rosdep&#x2F;sources.list.d&#x2F;20-default.list </code></pre></div></figure><p>修改全部内容为(<strong>注意修改</strong>&#x2F;opt为你自己的rosdistro文件夹目录 <strong>，下同</strong>)：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># os-specific listings firstyaml file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;rosdep&#x2F;osx-homebrew.yaml osx # genericyaml file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;rosdep&#x2F;base.yamlyaml file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;rosdep&#x2F;python.yamlyaml file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;rosdep&#x2F;ruby.yamlgbpdistro file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;releases&#x2F;fuerte.yaml fuerte # newer distributions (Groovy, Hydro, ...) must not be listed anymore, they are being fetched from the rosdi</code></pre></div></figure><h3 id="2-修改第二个文件"><a href="#2-修改第二个文件" class="headerlink" title="2. 修改第二个文件"></a>2. 修改第二个文件</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit &#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;dist-packages&#x2F;rosdep2&#x2F;gbpdistro_support.py</code></pre></div></figure><p>修改部分内容：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">FUERTE_GBPDISTRO_URL &#x3D; &#39;file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;releases&#x2F;fuerte.yaml&#39;</code></pre></div></figure><h3 id="3-修改第三个文件"><a href="#3-修改第三个文件" class="headerlink" title="3. 修改第三个文件"></a>3. 修改第三个文件</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit &#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;dist-packages&#x2F;rosdep2&#x2F;rep3.py</code></pre></div></figure><p>修改部分内容为：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">REP3_TARGETS_URL &#x3D; &#39;file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;releases&#x2F;targets.yaml&#39;</code></pre></div></figure><h3 id="4-修改第四个文件"><a href="#4-修改第四个文件" class="headerlink" title="4. 修改第四个文件"></a>4. 修改第四个文件</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit &#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;dist-packages&#x2F;rosdistro&#x2F;__init__.py</code></pre></div></figure><p>修改部分内容为：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">DEFAULT_INDEX_URL &#x3D; &#39;file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;index-v4.yaml&#39;</code></pre></div></figure><h3 id="5-修改第五个文件"><a href="#5-修改第五个文件" class="headerlink" title="5. 修改第五个文件"></a>5. 修改第五个文件</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit &#x2F;etc&#x2F;ros&#x2F;rosdep&#x2F;sources.list.d&#x2F;20-default.list</code></pre></div></figure><p>说明：如果指令<code>sudo rosdep init</code>没有执行，则不存在目录<code>/etc/ros/rosdep/sources.list.d</code>，需要自己创建后再修改。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># sudo rosdep init没有执行成功才需要自己创建sudo mkdir -p &#x2F;etc&#x2F;ros&#x2F;rosdep&#x2F;sources.list.dcd &#x2F;etc&#x2F;ros&#x2F;rosdep&#x2F;sources.list.dsudo touch 20-default.listsudo gedit 20-default.list</code></pre></div></figure><p>如果指令<code>sudo rosdep init</code>执行成功了，则存在目录<code>/etc/ros/rosdep/sources.list.d</code>，可直接修改部分内容。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">#os-specific listings firstyaml file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;rosdep&#x2F;osx-homebrew.yaml osx#genericyaml file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;rosdep&#x2F;base.yamlyaml file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;rosdep&#x2F;python.yamlyaml file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;rosdep&#x2F;ruby.yamlgbpdistro file:&#x2F;&#x2F;&#x2F;opt&#x2F;rosdistro&#x2F;releases&#x2F;fuerte.yaml fuerte#newer distributions (Groovy, Hydro, ...) must not be listed anymore, they are being fetched from the </code></pre></div></figure><h3 id="6-执行指令rosdep-update，运行通过"><a href="#6-执行指令rosdep-update，运行通过" class="headerlink" title="6. 执行指令rosdep update，运行通过"></a>6. 执行指令<code>rosdep update</code>，运行通过</h3><hr><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://blog.csdn.net/weixin_42584917/article/details/114448355">https://blog.csdn.net/weixin_42584917/article/details/114448355</a></p><p><a href="https://blog.csdn.net/weixin_43311920/article/details/114796748?utm_source=app&amp;app_version=4.5.4">https://blog.csdn.net/weixin_43311920/article/details/114796748?utm_source=app&amp;app_version=4.5.4</a></p><p><a href="https://zhuanlan.zhihu.com/p/365183222?ivk_sa=1024320u">https://zhuanlan.zhihu.com/p/365183222?ivk_sa=1024320u</a></p>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ROS安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu初始配置</title>
    <link href="/2023/09/20/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/ubuntu%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/09/20/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/ubuntu%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04</li><li>修改时间：2023年07月04日</li></ul><hr><h1 id="一、系统软件源设置"><a href="#一、系统软件源设置" class="headerlink" title="一、系统软件源设置"></a>一、系统软件源设置</h1><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/18.png"></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 更新源sudo apt-get update</code></pre></div></figure><h1 id="二、开机配置设置"><a href="#二、开机配置设置" class="headerlink" title="二、开机配置设置"></a>二、开机配置设置</h1><h2 id="1-打开开机引导文件"><a href="#1-打开开机引导文件" class="headerlink" title="1. 打开开机引导文件"></a>1. <strong>打开开机引导文件</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit &#x2F;etc&#x2F;default&#x2F;grub</code></pre></div></figure><h2 id="2-修改默认启动项"><a href="#2-修改默认启动项" class="headerlink" title="2. 修改默认启动项"></a><strong>2. 修改默认启动项</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">GRUB_DEFAULT&#x3D;2 # 属性名：开机默认启动系统# 值说明：从0开始（按照开机选择界面的顺序对应）</code></pre></div></figure><h2 id="3-修改等待时间"><a href="#3-修改等待时间" class="headerlink" title="3. 修改等待时间"></a><strong>3. 修改等待时间</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">GRUB_TIMEOUT&#x3D;5 # 属性名：进入默认启动项的等候时间# 值说明：单位：秒，默认10秒</code></pre></div></figure><h2 id="4-调整-GRUB-启动菜单字号"><a href="#4-调整-GRUB-启动菜单字号" class="headerlink" title="4. 调整 GRUB 启动菜单字号"></a>4. 调整 GRUB 启动菜单字号</h2><blockquote><p>📌<strong>屏幕是4K屏时，启动菜单字体较小可以进行设置。</strong></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">GRUB_GFXMODE&#x3D;1280x1024x32,1280x1024x24,1024x768x32,1024x768x24,&quot;auto&quot;</code></pre></div></figure><h2 id="5-修改生效"><a href="#5-修改生效" class="headerlink" title="5. 修改生效"></a><strong>5. 修改生效</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo update-grub</code></pre></div></figure><h1 id="三、显卡驱动安装"><a href="#三、显卡驱动安装" class="headerlink" title="三、显卡驱动安装"></a>三、显卡驱动安装</h1><h2 id="1-查看支持的显卡驱动"><a href="#1-查看支持的显卡驱动" class="headerlink" title="1. 查看支持的显卡驱动"></a>1. 查看支持的显卡驱动</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># sudo add-apt-repository ppa:graphics-drivers&#x2F;ppa sudo apt updateubuntu-drivers devices</code></pre></div></figure><h2 id="2-安装合适的驱动"><a href="#2-安装合适的驱动" class="headerlink" title="2. 安装合适的驱动"></a>2. 安装合适的驱动</h2><p>一般选择尾缀为 recommended的驱动版本，我的电脑使用GTX1650显卡，示例：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get install nvidia-driver-470sudo apt update</code></pre></div></figure><h2 id="3-等待安装完成后，重启系统，检查安装效果"><a href="#3-等待安装完成后，重启系统，检查安装效果" class="headerlink" title="3. 等待安装完成后，重启系统，检查安装效果"></a>3. 等待安装完成后，重启系统，检查安装效果</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvidia-smi</code></pre></div></figure><p>有显卡相关信息显示时，驱动安装成功。</p><h1 id="四、ubuntu命令行添加代理"><a href="#四、ubuntu命令行添加代理" class="headerlink" title="四、ubuntu命令行添加代理"></a>四、ubuntu命令行添加代理</h1><h2 id="1-安装proxychains4"><a href="#1-安装proxychains4" class="headerlink" title="1. 安装proxychains4"></a>1. 安装proxychains4</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get install proxychains4</code></pre></div></figure><h2 id="2-更改choxychains4-的配置文件"><a href="#2-更改choxychains4-的配置文件" class="headerlink" title="2. 更改choxychains4 的配置文件"></a>2. 更改choxychains4 的配置文件</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo gedit &#x2F;etc&#x2F;proxychains4.conf# 最后一行修改为socks5  127.0.0.1  7890</code></pre></div></figure><h2 id="3-更新及安装"><a href="#3-更新及安装" class="headerlink" title="3. 更新及安装"></a>3. 更新及安装</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo proxychains4 rosdep initproxychains4 rosdep update</code></pre></div></figure><h2 id="4-说明-x20"><a href="#4-说明-x20" class="headerlink" title="4. 说明&#x20;"></a>4. 说明&#x20;</h2><p>浏览器自带TCP和DNS解析，如果安装了VPN软件，浏览器会自动识别；但是linux客户端中没有相关的功能，如果需要VPN，则需要专门的解析器。</p><h1 id="五、常用软件安装"><a href="#五、常用软件安装" class="headerlink" title="五、常用软件安装"></a>五、常用软件安装</h1><h2 id="1-浏览器安装"><a href="#1-浏览器安装" class="headerlink" title="1. 浏览器安装"></a>1. 浏览器安装</h2><h3 id="1-安装谷歌浏览器"><a href="#1-安装谷歌浏览器" class="headerlink" title="1. 安装谷歌浏览器"></a><strong>1</strong>. <strong>安装谷歌浏览器</strong></h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wget  https:&#x2F;&#x2F;dl.google.com&#x2F;linux&#x2F;direct&#x2F;google-chrome-stable_current_amd64.deb  </code></pre></div></figure><h3 id="2-卸载火狐浏览器"><a href="#2-卸载火狐浏览器" class="headerlink" title="2. 卸载火狐浏览器"></a>2. <strong>卸载火狐浏览器</strong></h3><p>① 查看火狐浏览器安装内容</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dpkg --get-selections |grep firefox</code></pre></div></figure><p>② 将带有firefox内容的卸载</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get purge [带有firefox的内容]</code></pre></div></figure><p>例：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get purge firefox firefox-locale-zh-hans firefox-locale-en</code></pre></div></figure><h2 id="2-安装terminator"><a href="#2-安装terminator" class="headerlink" title="2. 安装terminator"></a>2. 安装terminator</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo apt-get install terminator</code></pre></div></figure><h2 id="3-录屏软件kazam"><a href="#3-录屏软件kazam" class="headerlink" title="3. 录屏软件kazam"></a>3. 录屏软件<strong>kazam</strong></h2><figure><div class="code-wrapper"><pre class="line-numbers language-纯文本" data-language="纯文本"><code class="language-纯文本">sudo apt-get install kazam</code></pre></div></figure><h2 id="4-编辑pgm图片GIMP"><a href="#4-编辑pgm图片GIMP" class="headerlink" title="4. 编辑pgm图片GIMP"></a>4. 编辑pgm图片GIMP</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 安装软件sudo apt updatesudo apt install gimp# 安装相关软件，方便以后安装插件sudo apt install gimp-plugin-registry</code></pre></div></figure><h2 id="5-截图工具"><a href="#5-截图工具" class="headerlink" title="5. 截图工具"></a>5. 截图工具</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 安装sudo apt install flameshot# 启动flameshot gui</code></pre></div></figure><ul><li>设置快捷键</li></ul><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/19.png"></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/20.png"></p><h2 id="6-微信安装"><a href="#6-微信安装" class="headerlink" title="6. 微信安装"></a>6. 微信安装</h2><h3 id="1-下载安装deepin-wine用于启动微信"><a href="#1-下载安装deepin-wine用于启动微信" class="headerlink" title="1. 下载安装deepin-wine用于启动微信"></a>1. 下载安装deepin-wine用于启动微信</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mkdir deepintempcd deepintempsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;d&#x2F;deepin-wine&#x2F;deepin-wine_2.18-22~rc0_all.debsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;d&#x2F;deepin-wine&#x2F;deepin-wine32_2.18-22~rc0_i386.debsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;d&#x2F;deepin-wine&#x2F;deepin-wine32-preloader_2.18-22~rc0_i386.debsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;d&#x2F;deepin-wine-helper&#x2F;deepin-wine-helper_1.2deepin8_i386.debsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;d&#x2F;deepin-wine-plugin&#x2F;deepin-wine-plugin_1.0deepin2_amd64.debsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;d&#x2F;deepin-wine-plugin-virtual&#x2F;deepin-wine-plugin-virtual_1.0deepin3_all.debsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;d&#x2F;deepin-wine-uninstaller&#x2F;deepin-wine-uninstaller_0.1deepin2_i386.debsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;u&#x2F;udis86&#x2F;udis86_1.72-2_i386.debsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;d&#x2F;deepin-wine&#x2F;deepin-fonts-wine_2.18-22~rc0_all.debsudo wget http:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;non-free&#x2F;d&#x2F;deepin-wine&#x2F;deepin-libwine_2.18-22~rc0_i386.debsudo wget https:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;main&#x2F;libj&#x2F;libjpeg-turbo&#x2F;libjpeg62-turbo_1.5.1-2_amd64.deb --no-check-certificatesudo wget https:&#x2F;&#x2F;packages.deepin.com&#x2F;deepin&#x2F;pool&#x2F;main&#x2F;libj&#x2F;libjpeg-turbo&#x2F;libjpeg62-turbo_1.5.1-2_i386.deb --no-check-certificate echo &#39;准备添加32位支持&#39;sudo dpkg --add-architecture i386echo &#39;添加成功，准备刷新apt缓存信息...&#39;sudo apt updateecho &#39;即将开始安装...&#39;sudo dpkg -i *.debecho &#39;安装完成，正在自动安装依赖...&#39;sudo apt install -fyecho &#39;删除上面已经安装的deb文件&#39;rm -vfr .&#x2F;deepintemp</code></pre></div></figure><h3 id="2-下载安装微信deb"><a href="#2-下载安装微信deb" class="headerlink" title="2. 下载安装微信deb"></a>2. 下载安装微信deb</h3><p>下载地址：</p><p><a href="http://packages.deepin.com/deepin/pool/non-free/d/deepin.com.wechat/">http://packages.deepin.com/deepin/pool/non-free/d/deepin.com.wechat/</a></p><p>我下载的版本是：<code>deepin.com.wechat_2.6.8.65deepin0_i386.deb </code>最新版本</p><p>确保上面的deepin-wine安装正常之后，就可以执行微信的安装：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sudo dpkg -i deepin.com.wechat_2.6.8.65deepin0_i386.deb</code></pre></div></figure><p>至此，ubuntu 20.04 下的微信安装就完成。</p><h3 id="3-中文字符一条黑杠的乱码现象"><a href="#3-中文字符一条黑杠的乱码现象" class="headerlink" title="3. 中文字符一条黑杠的乱码现象"></a>3. 中文字符一条黑杠的乱码现象</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 字体大小，因为wine对HiDPI不会默认适配dpi值。解决方案:WINEPREFIX&#x3D;~&#x2F;.deepinwine&#x2F;Deepin-WeChat deepin-wine winecfg# 打开wine设置页面，在显示选项卡中调整屏幕分辨率的dpi值即可。比如想实现win 10的150% DPI只需要将96改到144即可，125%放大则对应120。手工调整下合适的DPI就可以了</code></pre></div></figure><h3 id="4-中文乱码"><a href="#4-中文乱码" class="headerlink" title="4. 中文乱码"></a>4. 中文乱码</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 对于中文乱码是空格的情况，安装中文字体解决sudo apt-get install fonts-droid-fallback ttf-wqy-zenhei ttf-wqy-microhei fonts-arphic-ukai fonts-arphic-uming</code></pre></div></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://blog.csdn.net/u010381752/article/details/114012432">https://blog.csdn.net/u010381752/article/details/114012432</a></p><p><a href="https://www.cnblogs.com/impw/p/13734169.html">https://www.cnblogs.com/impw/p/13734169.html</a></p>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>系统安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows/ubuntu双系统U盘安装</title>
    <link href="/2023/09/20/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/windows-ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%AE%89%E8%A3%85/"/>
    <url>/2023/09/20/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/windows-ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04 + win10 &#x2F; win11 双系统</li><li>修改时间：2021年12月21日</li></ul><hr><h1 id="一、windows下切割一个未分配分区给ubuntu"><a href="#一、windows下切割一个未分配分区给ubuntu" class="headerlink" title="一、windows下切割一个未分配分区给ubuntu"></a><strong>一、windows</strong>下切割一个未分配分区给ubuntu</h1><p>右键【计算机】选择【管理】。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/10.png"></p><p>此处我的Linux分区我已经清空了，记得备份资料。网上有教程需要【压缩卷】，这是因为他们这块分区太大，需要分出一块来，你如果这块分区已经可以用于安装ubuntu了，那就没必要再压缩了。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/11.png"></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/12.png"></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/13.png"></p><p>被删除卷的分区在windows设备和驱动器下已经看不到了。</p><p>至此，windows<strong>系统下需要做的准备完成。</strong></p><h1 id="二、ubuntu系统安装"><a href="#二、ubuntu系统安装" class="headerlink" title="二、ubuntu系统安装"></a>二、ubuntu系统安装</h1><p>选择使用U盘启动，进入ubuntu安装界面。</p><ol><li><p>语言选择。</p></li><li><p>输入法选择。</p></li><li><p>wifi连接选择：不连接wifi，在装完系统后再联网更新。</p></li><li><p>更新和其他软件选择【正常安装】。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/14.png"></p></li><li><p>安装类型选择【其他选项】，为Ubuntu自定义分区。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/15.png"></p></li><li><p>进入自定义ubuntu分区界面，此处可以看到之前在windows中删除的卷，就在这个被删除的卷中安装Ubuntu系统，因为之前删除了卷，因此此处显示空闲。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/16.png"></p></li><li><p>选中【空闲】的这个卷，点击下方的“+”号，对这个卷进行分区，具体分区大小可根据自身硬盘大小调整。</p><p>1) 第一步：win10系统，创建【EFI系统分区】，大小为2G。</p><p>2) 第二步：创建【交换空间】，大小为16G。</p><p>3) 第三步：创建挂载点【&#x2F;】，大小为20G。</p><p>4) 第四步：创建挂载点【&#x2F;home】，大小为剩下的所有空间。</p></li><li><p>安装启动引导器的设备。</p><p>上面可以看到设置完成【EFI系统分区】后，系统分区为p7 efi，即为启动引导器所在的分区。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/17.png"></p></li><li><p>对分区进行确认后完成安装。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>系统安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows硬盘删除卷显示灰色，无法删除</title>
    <link href="/2023/09/20/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/Windows%E7%A1%AC%E7%9B%98%E5%88%A0%E9%99%A4%E5%8D%B7%E6%98%BE%E7%A4%BA%E7%81%B0%E8%89%B2%EF%BC%8C%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4/"/>
    <url>/2023/09/20/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/Windows%E7%A1%AC%E7%9B%98%E5%88%A0%E9%99%A4%E5%8D%B7%E6%98%BE%E7%A4%BA%E7%81%B0%E8%89%B2%EF%BC%8C%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04 + win10 &#x2F; win11 双系统</li><li>修改时间：2021年12月21日</li></ul><hr><blockquote><p>📌<strong>请务必谨慎操作，删错了，就没了！</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/9.png"></p><p><strong>1. cmd 打开命令提示符窗口，输入指令</strong></p>  <figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">diskpart    # 打卡一个新的窗口</code></pre></div></figure><p><strong>2. 新窗口输入指令</strong></p>  <figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">list diskselect disk  [number]     # 选择删除卷所在的硬盘号，根据实际情况选择list partitionselect partition  [number]     # 选择具体要删除的卷号，根据实际情况选择delete partition override    # 删除，谨慎操作！</code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>系统安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>双系统正确卸载Ubuntu系统</title>
    <link href="/2023/09/20/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%AD%A3%E7%A1%AE%E5%8D%B8%E8%BD%BDUbuntu%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/09/20/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%AD%A3%E7%A1%AE%E5%8D%B8%E8%BD%BDUbuntu%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04 + win10 &#x2F; win11双系统</li><li>修改时间：2021年12月21日</li></ul><hr><blockquote><p>📌卸载ubuntu时要慎重，不是直接删除ubuntu所在分区这么简单，否则你会发现你的windows系统也进不去了 <strong>（因电脑而异）</strong>。</p></blockquote><p><strong>正确卸载步骤</strong></p><ol><li><p>windows中打开软件EasyUEFI，进入【管理EFI启动项】。</p></li><li><p>【启动序列】中选择ubuntu系统，点击菜单【删除选中项】，删除ubuntu系统的启动项。</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/8.png"></p></li><li><p>删除磁盘管理中的ubuntu系统有关分区。（删除系统分区时，有可能出现删除选项是灰色，无法点击，<a href="https://xrobotspace.github.io/2023/09/20/Windows%E7%A1%AC%E7%9B%98%E5%88%A0%E9%99%A4%E5%8D%B7%E6%98%BE%E7%A4%BA%E7%81%B0%E8%89%B2%EF%BC%8C%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4/" title="解决方案">解决方案</a>）</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>系统安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu系统U盘启动盘制作</title>
    <link href="/2023/09/16/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/ubuntu%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C/"/>
    <url>/2023/09/16/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E6%9E%84%E5%BB%BA/%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Linux%E7%B3%BB%E7%BB%9F/ubuntu-windows%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/ubuntu%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04 + win10 &#x2F; win11 双系统</li><li>修改时间：2021年12月21日</li></ul><hr><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><ul><li><a href="#1-%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85ultraiso%E8%BD%AF%E4%BB%B6">1. 下载安装UltraISO软件</a></li><li><a href="#2-%E4%B8%8B%E8%BD%BDubuntu%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F">2. 下载Ubuntu系统镜像</a></li><li><a href="#3-ultraiso%E8%BD%AF%E4%BB%B6%E5%88%B6%E4%BD%9Cu%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98">3. UltraISO软件制作U盘启动盘</a></li><li><a href="#4-%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98">4. 可能遇到的问题</a></li></ul><h2 id="1-下载安装UltraISO软件"><a href="#1-下载安装UltraISO软件" class="headerlink" title="1. 下载安装UltraISO软件"></a>1. 下载安装UltraISO软件</h2><p>  <a href="https://cn.ultraiso.net/xiazai.html">https://cn.ultraiso.net/xiazai.html</a></p><h2 id="2-下载Ubuntu系统镜像"><a href="#2-下载Ubuntu系统镜像" class="headerlink" title="2. 下载Ubuntu系统镜像"></a>2. 下载Ubuntu系统镜像</h2><p>  <a href="https://releases.ubuntu.com/focal/">https://releases.ubuntu.com/focal/</a></p><h2 id="3-UltraISO软件制作U盘启动盘"><a href="#3-UltraISO软件制作U盘启动盘" class="headerlink" title="3. UltraISO软件制作U盘启动盘"></a>3. UltraISO软件制作U盘启动盘</h2><ol><li><p>选择【继续试用】</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_OZ7Js49hJl.png"> </p></li><li><p>点击【文件】菜单选择【打开】按钮或直接点击【打开】菜单，选择要安装的 .iso 系统镜像文件</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_mgC5eTuF2P.png"> </p></li><li><p>点击【启动】菜单，选择【写入硬盘映像…】</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_j-RDPEA2M1.png"> </p></li><li><p>确认安装</p><ul><li>确认磁盘驱动器为要安装系统的U盘；</li><li>确认映像文件为要安装的.iso系统文件；</li><li>隐藏启动分区设置为【隐藏】，隐藏分区专门放置Ubuntu系统（打开U盘看不到），另外一个分区空置，可以放其他东西，这样增删东西不会感觉的很乱。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_xGr4g5ZTug.png"></p><p>最后点击【写入】开始制作U盘启动盘：</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_umq4wKHiJ7.png"></p><p>写入完成，点击【返回】即可。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_2z1Mb58z37.png"></p><p>至此，UltraISO制作Ubuntu系统U盘启动盘步骤完成。</p></li></ol><h2 id="4-可能遇到的问题"><a href="#4-可能遇到的问题" class="headerlink" title="4. 可能遇到的问题"></a>4. 可能遇到的问题</h2><ol><li><p>制作完U盘后，总是提示需要格式化</p><p> 解决方案：使用管理员身份启动UltraISO。</p></li><li><p>将系统U盘变为普通盘</p><p> 解决方案：将空白系统写入U盘。</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_lEUq-oDAJO.png"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>系统安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
