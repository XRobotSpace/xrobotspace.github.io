<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ubuntu 20.04 / 18.04安装 ROS</title>
    <link href="/2023/09/23/ubuntu-20-04-18-04%E5%AE%89%E8%A3%85-ROS/"/>
    <url>/2023/09/23/ubuntu-20-04-18-04%E5%AE%89%E8%A3%85-ROS/</url>
    
    <content type="html"><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#%E4%B8%80%E8%BD%AF%E4%BB%B6%E6%BA%90%E9%85%8D%E7%BD%AE"><strong>一、软件源配置</strong></a><ul><li><a href="#1-%E9%85%8D%E7%BD%AEros%E8%BD%AF%E4%BB%B6%E6%BA%90%E6%9C%AC%E6%96%87%E4%BD%BF%E7%94%A8%E6%B8%85%E5%8D%8E%E6%BA%90"><strong>1. 配置ROS软件源（本文使用清华源）</strong></a></li><li><a href="#2-%E9%85%8D%E7%BD%AE%E5%AF%86%E9%92%A5"><strong>2. 配置密钥</strong></a></li></ul></li><li><a href="#%E4%BA%8C%E5%AE%89%E8%A3%85-ros"><strong>二、安装 ROS</strong></a><ul><li><a href="#1-%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%88%97%E8%A1%A8"><strong>1. 更新系统软件包列表</strong></a></li><li><a href="#2-%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%E5%AE%8C%E6%95%B4%E7%89%88-ros"><strong>2. 安装桌面完整版 ROS</strong></a></li><li><a href="#3-rosinstall-%E5%AE%89%E8%A3%85"><strong>3. rosinstall 安装</strong></a></li><li><a href="#4-%E5%88%9D%E5%A7%8B%E5%8C%96-rosdep"><strong>4. 初始化 rosdep</strong></a></li><li><a href="#5-%E9%85%8D%E7%BD%AEros%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"><strong>5. 配置ROS环境变量</strong></a></li></ul></li><li><a href="#%E4%B8%89%E6%B5%8B%E8%AF%95-ros"><strong>三、测试 ROS</strong></a></li><li><a href="#%E5%9B%9B%E5%8D%B8%E8%BD%BD-ros"><strong>四、卸载 ROS</strong></a></li><li><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE">参考文献</a></li></ul><hr><ul><li>操作系统：ubuntu18.04 &#x2F; 20.04</li><li>修改时间：2023年3月16日</li></ul><hr><blockquote><p>未特别注明安装版本的步骤，表示该步骤对于不同ubuntu版本没有区别。</p></blockquote><h1 id="一、软件源配置"><a href="#一、软件源配置" class="headerlink" title="一、软件源配置"></a><strong>一、软件源配置</strong></h1><h2 id="1-配置ROS软件源（本文使用清华源）"><a href="#1-配置ROS软件源（本文使用清华源）" class="headerlink" title="1. 配置ROS软件源（本文使用清华源）"></a><strong>1. 配置ROS软件源（本文使用清华源）</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sh -c <span class="hljs-string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br><br></code></pre></td></tr></table></figure><h2 id="2-配置密钥"><a href="#2-配置密钥" class="headerlink" title="2. 配置密钥"></a><strong>2. 配置密钥</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-key adv --keyserver <span class="hljs-string">&#x27;hkp://keyserver.ubuntu.com:80&#x27;</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654<br><br></code></pre></td></tr></table></figure><h1 id="二、安装-ROS"><a href="#二、安装-ROS" class="headerlink" title="二、安装 ROS"></a><strong>二、安装 ROS</strong></h1><h2 id="1-更新系统软件包列表"><a href="#1-更新系统软件包列表" class="headerlink" title="1. 更新系统软件包列表"></a><strong>1. 更新系统软件包列表</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br></code></pre></td></tr></table></figure><h2 id="2-安装桌面完整版-ROS"><a href="#2-安装桌面完整版-ROS" class="headerlink" title="2. 安装桌面完整版 ROS"></a><strong>2. 安装桌面完整版 ROS</strong></h2><ul><li><strong>ROS Noetic</strong> - ubuntu 20.04<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install ros-noetic-desktop-full<br><br></code></pre></td></tr></table></figure></li><li><strong>ROS Melodic</strong> - ubuntu 18.04<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install ros-melodic-desktop-full<br></code></pre></td></tr></table></figure></li></ul><h2 id="3-rosinstall-安装"><a href="#3-rosinstall-安装" class="headerlink" title="3. rosinstall 安装"></a><strong>3. rosinstall 安装</strong></h2><ul><li><strong>ROS Noetic</strong> - ubuntu 20.04<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install python3-rosdep python3-rosinstall-generator python3-wstool<br></code></pre></td></tr></table></figure></li><li>ROS Melodic - ubuntu 18.04<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential<br></code></pre></td></tr></table></figure></li></ul><h2 id="4-初始化-rosdep"><a href="#4-初始化-rosdep" class="headerlink" title="4. 初始化 rosdep"></a><strong>4. 初始化 rosdep</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo rosdep init<br>rosdep update<br></code></pre></td></tr></table></figure><blockquote><p>该步骤因网络问题出错较多，两种解决方案：1<code>ubuntu命令行添加代理（推荐）</code>，2<a href="https://www.wolai.com/5a89hieRQ2kEuMiHaPVuWs" title="解决方案">解决方案</a>。</p></blockquote><h2 id="5-配置ROS环境变量"><a href="#5-配置ROS环境变量" class="headerlink" title="5. 配置ROS环境变量"></a><strong>5. 配置ROS环境变量</strong></h2><ul><li><strong>ROS Noetic</strong> - ubuntu 20.04<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source /opt/ros/noetic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-comment"># 如果使用turtlebot</span><br><span class="hljs-built_in">export</span> TURTLEBOT3_MODEL=burger<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure></li><li>ROS Melodic - ubuntu 18.04<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source /opt/ros/melodic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-comment"># 如果使用turtlebot</span><br><span class="hljs-built_in">export</span> TURTLEBOT3_MODEL=burger<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure></li></ul><h1 id="三、测试-ROS"><a href="#三、测试-ROS" class="headerlink" title="三、测试 ROS"></a><strong>三、测试 ROS</strong></h1><p><strong>依次打开三个终端，运行指令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">roscore<br>rosrun turtlesim turtlesim_node<br>rosrun turtlesim turtle_teleop_key<br></code></pre></td></tr></table></figure><h1 id="四、卸载-ROS"><a href="#四、卸载-ROS" class="headerlink" title="四、卸载 ROS"></a><strong>四、卸载 ROS</strong></h1><p>第一步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get purge ros-*<br>sudo <span class="hljs-built_in">rm</span> -rf /etc/ros<br></code></pre></td></tr></table></figure><p>第二步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gedit ~/.bashrc    <span class="hljs-comment"># 删除其中关于ros的环境变量</span><br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="http://wiki.ros.org/cn/ROS/Installation">http://wiki.ros.org/cn/ROS/Installation</a></p>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ROS安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sudo rosdep init，rosdep update失败解决方案</title>
    <link href="/2023/09/23/sudo-rosdep-init%EF%BC%8Crosdep-update%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2023/09/23/sudo-rosdep-init%EF%BC%8Crosdep-update%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu18.04</li><li>修改时间：2021年12月21日</li><li>说明：<ul><li>ubuntu20.04基本步骤类似，存在一些文件的路径有区别。</li><li>本方案仅供记录，这个问题通过<code>ubuntu命令行添加代理</code>方式能更好解决。</li></ul></li></ul><hr><h1 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a><strong>一、问题描述</strong></h1><p>在Ubuntu 18.04 LTS 64bit 安装 ROS Melodic中，步骤初始化rosdep时需要执行指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo rosdep init<br>rosdep update<br></code></pre></td></tr></table></figure><p>但在执行时会因为网络问题出现错误提示。</p><h2 id="1-错误-1"><a href="#1-错误-1" class="headerlink" title="1 错误-1"></a><strong>1 错误-1</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo: rosdep：找不到命令<br></code></pre></td></tr></table></figure><p><strong>解决办法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install python-rosdep<br></code></pre></td></tr></table></figure><h2 id="2-错误-2"><a href="#2-错误-2" class="headerlink" title="2 错误-2"></a><strong>2 错误-2</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ERROR: default sources list file already exists: /etc/ros/rosdep/sources.list.d/20-default.list Please delete <span class="hljs-keyword">if</span> you wish to re-initialize<br></code></pre></td></tr></table></figure><p><strong>解决办法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">rm</span> /etc/ros/rosdep/sources.list.d/20-default.list<br></code></pre></td></tr></table></figure><p>路径需根据具体位置修改正确。</p><h2 id="3-错误-3"><a href="#3-错误-3" class="headerlink" title="3 错误-3"></a>3 错误-3</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ERROR: cannot download default sources list from: https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.list Website may be down.<br></code></pre></td></tr></table></figure><h2 id="4-错误-4"><a href="#4-错误-4" class="headerlink" title="4 错误-4"></a>4 错误-4</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">reading <span class="hljs-keyword">in</span> sources list data from /etc/ros/rosdep/sources.list.d<br>ERROR: unable to process <span class="hljs-built_in">source</span> [https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/osx-homebrew.yaml]:<br>&lt;urlopen error timed out&gt; (https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/osx-homebrew.yaml)<br>ERROR: unable to process <span class="hljs-built_in">source</span> [https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/base.yaml]:<br>&lt;urlopen error timed out&gt; (https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/base.yaml)<br>ERROR: unable to process <span class="hljs-built_in">source</span><br>[https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/python.yaml]:<br>&lt;urlopen error timed out&gt; (https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/python.yaml)<br>ERROR: unable to process <span class="hljs-built_in">source</span> [https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/ruby.yaml]:<br>&lt;urlopen error timed out&gt; (https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/ruby.yaml)<br>ERROR: unable to process <span class="hljs-built_in">source</span> [https://raw.githubusercontent.com/ros/rosdistro/master/releases/fuerte.yaml]:Failed to download target platform data <span class="hljs-keyword">for</span> gbpdistro:&lt;urlopen error timed out&gt;<br>Query rosdistro index https://raw.githubusercontent.com/ros/rosdistro/master/index-v4.yaml <br>ERROR: error loading sources list:<br>&lt;urlopen error &lt;urlopen error timed out&gt; (https://raw.githubusercontent.com/ros/rosdistro/master/index-v4.yaml)&gt;<br></code></pre></td></tr></table></figure><h1 id="二、解决方案"><a href="#二、解决方案" class="headerlink" title="二、解决方案"></a>二、解决方案</h1><h3 id="0-将rosdistro-clone到本地"><a href="#0-将rosdistro-clone到本地" class="headerlink" title="0. 将rosdistro clone到本地"></a>0. 将rosdistro clone到本地</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/ros/rosdistro.git<br></code></pre></td></tr></table></figure><p>默认会在<code>home/yourname/</code>下出现一个rosdistro文件夹，我习惯将文件夹复制到&#x2F;opt目录下，根据实际情况修改。</p><h3 id="1-修改第一个文件"><a href="#1-修改第一个文件" class="headerlink" title="1. 修改第一个文件"></a>1. 修改第一个文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gedit /opt/rosdistro/rosdep/sources.list.d/20-default.list <br></code></pre></td></tr></table></figure><p>修改全部内容为(<strong>注意修改</strong>&#x2F;opt为你自己的rosdistro文件夹目录 <strong>，下同</strong>)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># os-specific listings first</span><br>yaml file:///opt/rosdistro/rosdep/osx-homebrew.yaml osx<br> <br><span class="hljs-comment"># generic</span><br>yaml file:///opt/rosdistro/rosdep/base.yaml<br>yaml file:///opt/rosdistro/rosdep/python.yaml<br>yaml file:///opt/rosdistro/rosdep/ruby.yaml<br>gbpdistro file:///opt/rosdistro/releases/fuerte.yaml fuerte <br><br><span class="hljs-comment"># newer distributions (Groovy, Hydro, ...) must not be listed anymore, they are being fetched from the rosdi</span><br></code></pre></td></tr></table></figure><h3 id="2-修改第二个文件"><a href="#2-修改第二个文件" class="headerlink" title="2. 修改第二个文件"></a>2. 修改第二个文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gedit /usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py<br></code></pre></td></tr></table></figure><p>修改部分内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">FUERTE_GBPDISTRO_URL = <span class="hljs-string">&#x27;file:///opt/rosdistro/releases/fuerte.yaml&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="3-修改第三个文件"><a href="#3-修改第三个文件" class="headerlink" title="3. 修改第三个文件"></a>3. 修改第三个文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gedit /usr/lib/python2.7/dist-packages/rosdep2/rep3.py<br></code></pre></td></tr></table></figure><p>修改部分内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">REP3_TARGETS_URL = <span class="hljs-string">&#x27;file:///opt/rosdistro/releases/targets.yaml&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="4-修改第四个文件"><a href="#4-修改第四个文件" class="headerlink" title="4. 修改第四个文件"></a>4. 修改第四个文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gedit /usr/lib/python2.7/dist-packages/rosdistro/__init__.py<br></code></pre></td></tr></table></figure><p>修改部分内容为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">DEFAULT_INDEX_URL = <span class="hljs-string">&#x27;file:///opt/rosdistro/index-v4.yaml&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="5-修改第五个文件"><a href="#5-修改第五个文件" class="headerlink" title="5. 修改第五个文件"></a>5. 修改第五个文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gedit /etc/ros/rosdep/sources.list.d/20-default.list<br></code></pre></td></tr></table></figure><p>说明：如果指令<code>sudo rosdep init</code>没有执行，则不存在目录<code>/etc/ros/rosdep/sources.list.d</code>，需要自己创建后再修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sudo rosdep init没有执行成功才需要自己创建</span><br>sudo <span class="hljs-built_in">mkdir</span> -p /etc/ros/rosdep/sources.list.d<br><span class="hljs-built_in">cd</span> /etc/ros/rosdep/sources.list.d<br>sudo <span class="hljs-built_in">touch</span> 20-default.list<br>sudo gedit 20-default.list<br></code></pre></td></tr></table></figure><p>如果指令<code>sudo rosdep init</code>执行成功了，则存在目录<code>/etc/ros/rosdep/sources.list.d</code>，可直接修改部分内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#os-specific listings first</span><br>yaml file:///opt/rosdistro/rosdep/osx-homebrew.yaml osx<br><span class="hljs-comment">#generic</span><br>yaml file:///opt/rosdistro/rosdep/base.yaml<br>yaml file:///opt/rosdistro/rosdep/python.yaml<br>yaml file:///opt/rosdistro/rosdep/ruby.yaml<br>gbpdistro file:///opt/rosdistro/releases/fuerte.yaml fuerte<br><br><span class="hljs-comment">#newer distributions (Groovy, Hydro, ...) must not be listed anymore, they are being fetched from the </span><br></code></pre></td></tr></table></figure><h3 id="6-执行指令rosdep-update，运行通过"><a href="#6-执行指令rosdep-update，运行通过" class="headerlink" title="6. 执行指令rosdep update，运行通过"></a>6. 执行指令<code>rosdep update</code>，运行通过</h3><hr><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://blog.csdn.net/weixin_42584917/article/details/114448355">https://blog.csdn.net/weixin_42584917/article/details/114448355</a></p><p><a href="https://blog.csdn.net/weixin_43311920/article/details/114796748?utm_source=app&amp;app_version=4.5.4">https://blog.csdn.net/weixin_43311920/article/details/114796748?utm_source=app&amp;app_version=4.5.4</a></p><p><a href="https://zhuanlan.zhihu.com/p/365183222?ivk_sa=1024320u">https://zhuanlan.zhihu.com/p/365183222?ivk_sa=1024320u</a></p>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ROS安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu初始配置</title>
    <link href="/2023/09/20/ubuntu%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/09/20/ubuntu%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04</li><li>修改时间：2023年07月04日</li></ul><hr><h1 id="一、系统软件源设置"><a href="#一、系统软件源设置" class="headerlink" title="一、系统软件源设置"></a>一、系统软件源设置</h1><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/18.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 更新源</span><br>sudo apt-get update<br></code></pre></td></tr></table></figure><h1 id="二、开机配置设置"><a href="#二、开机配置设置" class="headerlink" title="二、开机配置设置"></a>二、开机配置设置</h1><h2 id="1-打开开机引导文件"><a href="#1-打开开机引导文件" class="headerlink" title="1. 打开开机引导文件"></a>1. <strong>打开开机引导文件</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gedit /etc/default/grub<br></code></pre></td></tr></table></figure><h2 id="2-修改默认启动项"><a href="#2-修改默认启动项" class="headerlink" title="2. 修改默认启动项"></a><strong>2. 修改默认启动项</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">GRUB_DEFAULT=2 <br><span class="hljs-comment"># 属性名：开机默认启动系统</span><br><span class="hljs-comment"># 值说明：从0开始（按照开机选择界面的顺序对应）</span><br></code></pre></td></tr></table></figure><h2 id="3-修改等待时间"><a href="#3-修改等待时间" class="headerlink" title="3. 修改等待时间"></a><strong>3. 修改等待时间</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">GRUB_TIMEOUT=5 <br><span class="hljs-comment"># 属性名：进入默认启动项的等候时间</span><br><span class="hljs-comment"># 值说明：单位：秒，默认10秒</span><br></code></pre></td></tr></table></figure><h2 id="4-调整-GRUB-启动菜单字号"><a href="#4-调整-GRUB-启动菜单字号" class="headerlink" title="4. 调整 GRUB 启动菜单字号"></a>4. 调整 GRUB 启动菜单字号</h2><blockquote><p>📌<strong>屏幕是4K屏时，启动菜单字体较小可以进行设置。</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">GRUB_GFXMODE=1280x1024x32,1280x1024x24,1024x768x32,1024x768x24,<span class="hljs-string">&quot;auto&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="5-修改生效"><a href="#5-修改生效" class="headerlink" title="5. 修改生效"></a><strong>5. 修改生效</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo update-grub<br></code></pre></td></tr></table></figure><h1 id="三、显卡驱动安装"><a href="#三、显卡驱动安装" class="headerlink" title="三、显卡驱动安装"></a>三、显卡驱动安装</h1><h2 id="1-查看支持的显卡驱动"><a href="#1-查看支持的显卡驱动" class="headerlink" title="1. 查看支持的显卡驱动"></a>1. 查看支持的显卡驱动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sudo add-apt-repository ppa:graphics-drivers/ppa </span><br>sudo apt update<br><br>ubuntu-drivers devices<br></code></pre></td></tr></table></figure><h2 id="2-安装合适的驱动"><a href="#2-安装合适的驱动" class="headerlink" title="2. 安装合适的驱动"></a>2. 安装合适的驱动</h2><p>一般选择尾缀为 recommended的驱动版本，我的电脑使用GTX1650显卡，示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install nvidia-driver-470<br>sudo apt update<br></code></pre></td></tr></table></figure><h2 id="3-等待安装完成后，重启系统，检查安装效果"><a href="#3-等待安装完成后，重启系统，检查安装效果" class="headerlink" title="3. 等待安装完成后，重启系统，检查安装效果"></a>3. 等待安装完成后，重启系统，检查安装效果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nvidia-smi<br></code></pre></td></tr></table></figure><p>有显卡相关信息显示时，驱动安装成功。</p><h1 id="四、ubuntu命令行添加代理"><a href="#四、ubuntu命令行添加代理" class="headerlink" title="四、ubuntu命令行添加代理"></a>四、ubuntu命令行添加代理</h1><h2 id="1-安装proxychains4"><a href="#1-安装proxychains4" class="headerlink" title="1. 安装proxychains4"></a>1. 安装proxychains4</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install proxychains4<br></code></pre></td></tr></table></figure><h2 id="2-更改choxychains4-的配置文件"><a href="#2-更改choxychains4-的配置文件" class="headerlink" title="2. 更改choxychains4 的配置文件"></a>2. 更改choxychains4 的配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gedit /etc/proxychains4.conf<br><span class="hljs-comment"># 最后一行修改为</span><br>socks5  127.0.0.1  7890<br></code></pre></td></tr></table></figure><h2 id="3-更新及安装"><a href="#3-更新及安装" class="headerlink" title="3. 更新及安装"></a>3. 更新及安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo proxychains4 rosdep init<br><br>proxychains4 rosdep update<br></code></pre></td></tr></table></figure><h2 id="4-说明-x20"><a href="#4-说明-x20" class="headerlink" title="4. 说明&#x20;"></a>4. 说明&#x20;</h2><p>浏览器自带TCP和DNS解析，如果安装了VPN软件，浏览器会自动识别；但是linux客户端中没有相关的功能，如果需要VPN，则需要专门的解析器。</p><h1 id="五、常用软件安装"><a href="#五、常用软件安装" class="headerlink" title="五、常用软件安装"></a>五、常用软件安装</h1><h2 id="1-浏览器安装"><a href="#1-浏览器安装" class="headerlink" title="1. 浏览器安装"></a>1. 浏览器安装</h2><h3 id="1-安装谷歌浏览器"><a href="#1-安装谷歌浏览器" class="headerlink" title="1. 安装谷歌浏览器"></a><strong>1</strong>. <strong>安装谷歌浏览器</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget  https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb  <br></code></pre></td></tr></table></figure><h3 id="2-卸载火狐浏览器"><a href="#2-卸载火狐浏览器" class="headerlink" title="2. 卸载火狐浏览器"></a>2. <strong>卸载火狐浏览器</strong></h3><p>① 查看火狐浏览器安装内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg --get-selections |grep firefox<br></code></pre></td></tr></table></figure><p>② 将带有firefox内容的卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get purge [带有firefox的内容]<br></code></pre></td></tr></table></figure><p>例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get purge firefox firefox-locale-zh-hans firefox-locale-en<br></code></pre></td></tr></table></figure><h2 id="2-安装terminator"><a href="#2-安装terminator" class="headerlink" title="2. 安装terminator"></a>2. 安装terminator</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install terminator<br></code></pre></td></tr></table></figure><h2 id="3-录屏软件kazam"><a href="#3-录屏软件kazam" class="headerlink" title="3. 录屏软件kazam"></a>3. 录屏软件<strong>kazam</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 纯文本">sudo apt-get install kazam<br></code></pre></td></tr></table></figure><h2 id="4-编辑pgm图片GIMP"><a href="#4-编辑pgm图片GIMP" class="headerlink" title="4. 编辑pgm图片GIMP"></a>4. 编辑pgm图片GIMP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装软件</span><br>sudo apt update<br>sudo apt install gimp<br><span class="hljs-comment"># 安装相关软件，方便以后安装插件</span><br>sudo apt install gimp-plugin-registry<br></code></pre></td></tr></table></figure><h2 id="5-截图工具"><a href="#5-截图工具" class="headerlink" title="5. 截图工具"></a>5. 截图工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装</span><br>sudo apt install flameshot<br><span class="hljs-comment"># 启动</span><br>flameshot gui<br><br></code></pre></td></tr></table></figure><ul><li>设置快捷键</li></ul><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/19.png"></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/20.png"></p><h2 id="6-微信安装"><a href="#6-微信安装" class="headerlink" title="6. 微信安装"></a>6. 微信安装</h2><h3 id="1-下载安装deepin-wine用于启动微信"><a href="#1-下载安装deepin-wine用于启动微信" class="headerlink" title="1. 下载安装deepin-wine用于启动微信"></a>1. 下载安装deepin-wine用于启动微信</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> deepintemp<br><span class="hljs-built_in">cd</span> deepintemp<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/d/deepin-wine/deepin-wine_2.18-22~rc0_all.deb<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/d/deepin-wine/deepin-wine32_2.18-22~rc0_i386.deb<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/d/deepin-wine/deepin-wine32-preloader_2.18-22~rc0_i386.deb<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/d/deepin-wine-helper/deepin-wine-helper_1.2deepin8_i386.deb<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/d/deepin-wine-plugin/deepin-wine-plugin_1.0deepin2_amd64.deb<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/d/deepin-wine-plugin-virtual/deepin-wine-plugin-virtual_1.0deepin3_all.deb<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/d/deepin-wine-uninstaller/deepin-wine-uninstaller_0.1deepin2_i386.deb<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/u/udis86/udis86_1.72-2_i386.deb<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/d/deepin-wine/deepin-fonts-wine_2.18-22~rc0_all.deb<br>sudo wget http://packages.deepin.com/deepin/pool/non-free/d/deepin-wine/deepin-libwine_2.18-22~rc0_i386.deb<br>sudo wget https://packages.deepin.com/deepin/pool/main/libj/libjpeg-turbo/libjpeg62-turbo_1.5.1-2_amd64.deb --no-check-certificate<br>sudo wget https://packages.deepin.com/deepin/pool/main/libj/libjpeg-turbo/libjpeg62-turbo_1.5.1-2_i386.deb --no-check-certificate<br> <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;准备添加32位支持&#x27;</span><br>sudo dpkg --add-architecture i386<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;添加成功，准备刷新apt缓存信息...&#x27;</span><br>sudo apt update<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;即将开始安装...&#x27;</span><br>sudo dpkg -i *.deb<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;安装完成，正在自动安装依赖...&#x27;</span><br>sudo apt install -fy<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;删除上面已经安装的deb文件&#x27;</span><br><span class="hljs-built_in">rm</span> -vfr ./deepintemp<br></code></pre></td></tr></table></figure><h3 id="2-下载安装微信deb"><a href="#2-下载安装微信deb" class="headerlink" title="2. 下载安装微信deb"></a>2. 下载安装微信deb</h3><p>下载地址：</p><p><a href="http://packages.deepin.com/deepin/pool/non-free/d/deepin.com.wechat/">http://packages.deepin.com/deepin/pool/non-free/d/deepin.com.wechat/</a></p><p>我下载的版本是：<code>deepin.com.wechat_2.6.8.65deepin0_i386.deb </code>最新版本</p><p>确保上面的deepin-wine安装正常之后，就可以执行微信的安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dpkg -i deepin.com.wechat_2.6.8.65deepin0_i386.deb<br></code></pre></td></tr></table></figure><p>至此，ubuntu 20.04 下的微信安装就完成。</p><h3 id="3-中文字符一条黑杠的乱码现象"><a href="#3-中文字符一条黑杠的乱码现象" class="headerlink" title="3. 中文字符一条黑杠的乱码现象"></a>3. 中文字符一条黑杠的乱码现象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 字体大小，因为wine对HiDPI不会默认适配dpi值。解决方案:</span><br>WINEPREFIX=~/.deepinwine/Deepin-WeChat deepin-wine winecfg<br><span class="hljs-comment"># 打开wine设置页面，在显示选项卡中调整屏幕分辨率的dpi值即可。比如想实现win 10的150% DPI只需要将96改到144即可，125%放大则对应120。手工调整下合适的DPI就可以了</span><br><br></code></pre></td></tr></table></figure><h3 id="4-中文乱码"><a href="#4-中文乱码" class="headerlink" title="4. 中文乱码"></a>4. 中文乱码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 对于中文乱码是空格的情况，安装中文字体解决</span><br>sudo apt-get install fonts-droid-fallback ttf-wqy-zenhei ttf-wqy-microhei fonts-arphic-ukai fonts-arphic-uming<br></code></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://blog.csdn.net/u010381752/article/details/114012432">https://blog.csdn.net/u010381752/article/details/114012432</a></p><p><a href="https://www.cnblogs.com/impw/p/13734169.html">https://www.cnblogs.com/impw/p/13734169.html</a></p>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统安装</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows-ubuntu双系统U盘安装</title>
    <link href="/2023/09/20/windows-ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%AE%89%E8%A3%85/"/>
    <url>/2023/09/20/windows-ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04 + win10 &#x2F; win11 双系统</li><li>修改时间：2021年12月21日</li></ul><hr><h1 id="一、windows下切割一个未分配分区给ubuntu"><a href="#一、windows下切割一个未分配分区给ubuntu" class="headerlink" title="一、windows下切割一个未分配分区给ubuntu"></a><strong>一、windows</strong>下切割一个未分配分区给ubuntu</h1><p>右键【计算机】选择【管理】。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/10.png"></p><p>此处我的Linux分区我已经清空了，记得备份资料。网上有教程需要【压缩卷】，这是因为他们这块分区太大，需要分出一块来，你如果这块分区已经可以用于安装ubuntu了，那就没必要再压缩了。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/11.png"></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/12.png"></p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/13.png"></p><p>被删除卷的分区在windows设备和驱动器下已经看不到了。</p><p>至此，windows<strong>系统下需要做的准备完成。</strong></p><h1 id="二、ubuntu系统安装"><a href="#二、ubuntu系统安装" class="headerlink" title="二、ubuntu系统安装"></a>二、ubuntu系统安装</h1><p>选择使用U盘启动，进入ubuntu安装界面。</p><ol><li><p>语言选择。</p></li><li><p>输入法选择。</p></li><li><p>wifi连接选择：不连接wifi，在装完系统后再联网更新。</p></li><li><p>更新和其他软件选择【正常安装】。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/14.png"></p></li><li><p>安装类型选择【其他选项】，为Ubuntu自定义分区。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/15.png"></p></li><li><p>进入自定义ubuntu分区界面，此处可以看到之前在windows中删除的卷，就在这个被删除的卷中安装Ubuntu系统，因为之前删除了卷，因此此处显示空闲。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/16.png"></p></li><li><p>选中【空闲】的这个卷，点击下方的“+”号，对这个卷进行分区，具体分区大小可根据自身硬盘大小调整。</p><p>1) 第一步：win10系统，创建【EFI系统分区】，大小为2G。</p><p>2) 第二步：创建【交换空间】，大小为16G。</p><p>3) 第三步：创建挂载点【&#x2F;】，大小为20G。</p><p>4) 第四步：创建挂载点【&#x2F;home】，大小为剩下的所有空间。</p></li><li><p>安装启动引导器的设备。</p><p>上面可以看到设置完成【EFI系统分区】后，系统分区为p7 efi，即为启动引导器所在的分区。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/17.png"></p></li><li><p>对分区进行确认后完成安装。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统安装</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows硬盘删除卷显示灰色，无法删除</title>
    <link href="/2023/09/20/Windows%E7%A1%AC%E7%9B%98%E5%88%A0%E9%99%A4%E5%8D%B7%E6%98%BE%E7%A4%BA%E7%81%B0%E8%89%B2%EF%BC%8C%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4/"/>
    <url>/2023/09/20/Windows%E7%A1%AC%E7%9B%98%E5%88%A0%E9%99%A4%E5%8D%B7%E6%98%BE%E7%A4%BA%E7%81%B0%E8%89%B2%EF%BC%8C%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04 + win10 &#x2F; win11 双系统</li><li>修改时间：2021年12月21日</li></ul><hr><blockquote><p>📌<strong>请务必谨慎操作，删错了，就没了！</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/9.png"></p><p><strong>1. cmd 打开命令提示符窗口，输入指令</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">diskpart    <span class="hljs-comment"># 打卡一个新的窗口</span><br></code></pre></td></tr></table></figure><p><strong>2. 新窗口输入指令</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">list disk<br><br><span class="hljs-keyword">select</span> disk  [number]     <span class="hljs-comment"># 选择删除卷所在的硬盘号，根据实际情况选择</span><br><br>list partition<br><br><span class="hljs-keyword">select</span> partition  [number]     <span class="hljs-comment"># 选择具体要删除的卷号，根据实际情况选择</span><br><br>delete partition override    <span class="hljs-comment"># 删除，谨慎操作！</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统安装</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>双系统正确卸载Ubuntu系统</title>
    <link href="/2023/09/20/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%AD%A3%E7%A1%AE%E5%8D%B8%E8%BD%BDUbuntu%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/09/20/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%AD%A3%E7%A1%AE%E5%8D%B8%E8%BD%BDUbuntu%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04 + win10 &#x2F; win11双系统</li><li>修改时间：2021年12月21日</li></ul><hr><blockquote><p>📌卸载ubuntu时要慎重，不是直接删除ubuntu所在分区这么简单，否则你会发现你的windows系统也进不去了 <strong>（因电脑而异）</strong>。</p></blockquote><p><strong>正确卸载步骤</strong></p><ol><li><p>windows中打开软件EasyUEFI，进入【管理EFI启动项】。</p></li><li><p>【启动序列】中选择ubuntu系统，点击菜单【删除选中项】，删除ubuntu系统的启动项。</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/8.png"></p></li><li><p>删除磁盘管理中的ubuntu系统有关分区。（删除系统分区时，有可能出现删除选项是灰色，无法点击，<a href="https://xrobotspace.github.io/2023/09/20/Windows%E7%A1%AC%E7%9B%98%E5%88%A0%E9%99%A4%E5%8D%B7%E6%98%BE%E7%A4%BA%E7%81%B0%E8%89%B2%EF%BC%8C%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4/" title="解决方案">解决方案</a>）</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统安装</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu系统U盘启动盘制作</title>
    <link href="/2023/09/16/ubuntu%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C/"/>
    <url>/2023/09/16/ubuntu%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<hr><ul><li>操作系统：ubuntu 18.04 &#x2F; 20.04 &#x2F; 22.04 + win10 &#x2F; win11 双系统</li><li>修改时间：2021年12月21日</li></ul><hr><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><ul><li><a href="#1-%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85ultraiso%E8%BD%AF%E4%BB%B6">1. 下载安装UltraISO软件</a></li><li><a href="#2-%E4%B8%8B%E8%BD%BDubuntu%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F">2. 下载Ubuntu系统镜像</a></li><li><a href="#3-ultraiso%E8%BD%AF%E4%BB%B6%E5%88%B6%E4%BD%9Cu%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98">3. UltraISO软件制作U盘启动盘</a></li><li><a href="#4-%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98">4. 可能遇到的问题</a></li></ul><h2 id="1-下载安装UltraISO软件"><a href="#1-下载安装UltraISO软件" class="headerlink" title="1. 下载安装UltraISO软件"></a>1. 下载安装UltraISO软件</h2><p>  <a href="https://cn.ultraiso.net/xiazai.html">https://cn.ultraiso.net/xiazai.html</a></p><h2 id="2-下载Ubuntu系统镜像"><a href="#2-下载Ubuntu系统镜像" class="headerlink" title="2. 下载Ubuntu系统镜像"></a>2. 下载Ubuntu系统镜像</h2><p>  <a href="https://releases.ubuntu.com/focal/">https://releases.ubuntu.com/focal/</a></p><h2 id="3-UltraISO软件制作U盘启动盘"><a href="#3-UltraISO软件制作U盘启动盘" class="headerlink" title="3. UltraISO软件制作U盘启动盘"></a>3. UltraISO软件制作U盘启动盘</h2><ol><li><p>选择【继续试用】</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_OZ7Js49hJl.png"> </p></li><li><p>点击【文件】菜单选择【打开】按钮或直接点击【打开】菜单，选择要安装的 .iso 系统镜像文件</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_mgC5eTuF2P.png"> </p></li><li><p>点击【启动】菜单，选择【写入硬盘映像…】</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_j-RDPEA2M1.png"> </p></li><li><p>确认安装</p><ul><li>确认磁盘驱动器为要安装系统的U盘；</li><li>确认映像文件为要安装的.iso系统文件；</li><li>隐藏启动分区设置为【隐藏】，隐藏分区专门放置Ubuntu系统（打开U盘看不到），另外一个分区空置，可以放其他东西，这样增删东西不会感觉的很乱。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_xGr4g5ZTug.png"></p><p>最后点击【写入】开始制作U盘启动盘：</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_umq4wKHiJ7.png"></p><p>写入完成，点击【返回】即可。</p><p><img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_2z1Mb58z37.png"></p><p>至此，UltraISO制作Ubuntu系统U盘启动盘步骤完成。</p></li></ol><h2 id="4-可能遇到的问题"><a href="#4-可能遇到的问题" class="headerlink" title="4. 可能遇到的问题"></a>4. 可能遇到的问题</h2><ol><li><p>制作完U盘后，总是提示需要格式化</p><p> 解决方案：使用管理员身份启动UltraISO。</p></li><li><p>将系统U盘变为普通盘</p><p> 解决方案：将空白系统写入U盘。</p><p> <img src="https://cdn.jsdelivr.net/gh/XRobotSpace/resources/images/image_lEUq-oDAJO.png"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>基础技术栈</category>
      
      <category>软件安装</category>
      
      <category>Linux系统</category>
      
      <category>ubuntu/windows双系统安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统安装</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
